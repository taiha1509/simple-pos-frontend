[{"/home/rogers/simple-pos/src/index.js":"1","/home/rogers/simple-pos/src/App.js":"2","/home/rogers/simple-pos/src/reportWebVitals.js":"3","/home/rogers/simple-pos/src/store.js":"4","/home/rogers/simple-pos/src/pages/Login.jsx":"5","/home/rogers/simple-pos/src/pages/Checkout.jsx":"6","/home/rogers/simple-pos/src/pages/TabDrawer.jsx":"7","/home/rogers/simple-pos/src/pages/ModalAddCustomer.jsx":"8","/home/rogers/simple-pos/src/reducers/rootReducer.js":"9","/home/rogers/simple-pos/src/epics/rootEpic.js":"10","/home/rogers/simple-pos/src/reducers/staffReducer.js":"11","/home/rogers/simple-pos/src/epics/StaffEpic.js":"12","/home/rogers/simple-pos/src/epics/ProductEpic.js":"13","/home/rogers/simple-pos/src/reducers/productReducer.js":"14","/home/rogers/simple-pos/src/constants/index.js":"15","/home/rogers/simple-pos/src/actions/ProductAction.js":"16","/home/rogers/simple-pos/src/actions/StaffAction.js":"17","/home/rogers/simple-pos/src/pages/ChooseLocation.jsx":"18","/home/rogers/simple-pos/src/actions/CustomerAction.js":"19","/home/rogers/simple-pos/src/actions/OrderAction.js":"20","/home/rogers/simple-pos/src/epics/OrderEpic.js":"21","/home/rogers/simple-pos/src/epics/CustomerEpic.js":"22","/home/rogers/simple-pos/src/reducers/customerReducer.js":"23","/home/rogers/simple-pos/src/reducers/orderReducers.js":"24","/home/rogers/simple-pos/src/helper/index.js":"25","/home/rogers/simple-pos/src/actions/CartAction.js":"26","/home/rogers/simple-pos/src/reducers/cartReducer.js":"27","/home/rogers/simple-pos/src/pages/ListProduct.jsx":"28","/home/rogers/simple-pos/src/pages/OrderHistory.jsx":"29"},{"size":1276,"mtime":1609773993572,"results":"30","hashOfConfig":"31"},{"size":2083,"mtime":1610299850910,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1609036094512,"results":"33","hashOfConfig":"31"},{"size":959,"mtime":1609928293085,"results":"34","hashOfConfig":"31"},{"size":2936,"mtime":1609733836658,"results":"35","hashOfConfig":"31"},{"size":13388,"mtime":1610297373643,"results":"36","hashOfConfig":"31"},{"size":1918,"mtime":1610299841178,"results":"37","hashOfConfig":"31"},{"size":2266,"mtime":1609935521056,"results":"38","hashOfConfig":"31"},{"size":368,"mtime":1610259891381,"results":"39","hashOfConfig":"31"},{"size":450,"mtime":1610101854964,"results":"40","hashOfConfig":"31"},{"size":1143,"mtime":1610103777422,"results":"41","hashOfConfig":"31"},{"size":1218,"mtime":1609772291540,"results":"42","hashOfConfig":"31"},{"size":1820,"mtime":1609771646733,"results":"43","hashOfConfig":"31"},{"size":663,"mtime":1610297053730,"results":"44","hashOfConfig":"31"},{"size":888,"mtime":1610286983236,"results":"45","hashOfConfig":"31"},{"size":1964,"mtime":1610290140892,"results":"46","hashOfConfig":"31"},{"size":609,"mtime":1609930396083,"results":"47","hashOfConfig":"31"},{"size":1827,"mtime":1609898155291,"results":"48","hashOfConfig":"31"},{"size":500,"mtime":1609930401828,"results":"49","hashOfConfig":"31"},{"size":513,"mtime":1610259798703,"results":"50","hashOfConfig":"31"},{"size":3994,"mtime":1610260685625,"results":"51","hashOfConfig":"31"},{"size":898,"mtime":1609926093512,"results":"52","hashOfConfig":"31"},{"size":872,"mtime":1609950498411,"results":"53","hashOfConfig":"31"},{"size":564,"mtime":1610259884922,"results":"54","hashOfConfig":"31"},{"size":567,"mtime":1609989705497,"results":"55","hashOfConfig":"31"},{"size":244,"mtime":1609990180383,"results":"56","hashOfConfig":"31"},{"size":1329,"mtime":1610282277718,"results":"57","hashOfConfig":"31"},{"size":5202,"mtime":1610297580165,"results":"58","hashOfConfig":"31"},{"size":154,"mtime":1610296062786,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1nr9j9s",{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/rogers/simple-pos/src/index.js",[],["130","131"],"/home/rogers/simple-pos/src/App.js",["132","133","134","135","136","137","138","139"],"/home/rogers/simple-pos/src/reportWebVitals.js",[],"/home/rogers/simple-pos/src/store.js",[],"/home/rogers/simple-pos/src/pages/Login.jsx",["140","141","142","143","144","145","146"],"import { Grid, Row, Col,Form, Input, Button, Checkbox } from 'antd';\nimport { useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport {login} from '../actions/StaffAction';\n\nconst Login = ({login}) => {\n    \n    const [cookies, setCookies, removeCookies] = useCookies(['isLogin, staff']);\n    \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n  \n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    };\n\n    const LoginForm = () => {\n        const onFinish = values => {\n            setEmail(values.username);\n            setPassword(values.password);\n            console.log('Success:', values);\n            login(values.username, values.password);\n\n        };\n\n        const onFinishFailed = errorInfo => {\n            console.log('Failed:', errorInfo);\n        };\n\n        return (\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"Username\"\n                    name=\"username\"\n                    rules={[{ required: true, message: 'Please input your username!' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        LOGIN\n              </Button>\n                </Form.Item>\n            </Form>\n        );\n    };\n\n    return (\n        <Row>\n            <Col span={9} >\n            </Col>\n            <Col span={6} className='login'>\n                <img src='/icon-login.png' style={{width: + '80', marginTop: + '200'}}></img>\n                <br />\n                <br />\n                <h2>Login</h2>\n                <br></br>\n                <LoginForm/>\n            </Col>\n            <Col span={9} >\n            </Col>\n        </Row>\n    );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return{\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        login: (email, password) => dispatch(login({\n            email: email,\n            password: password\n        }))\n    }   \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","/home/rogers/simple-pos/src/pages/Checkout.jsx",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"import { Row, Col, Input, Popover, Button, Pagination, Modal, Space, Spin, notification } from 'antd';\nimport { useEffect, useRef, useState } from 'react';\nimport './css/checkout.css';\nimport TabDrawer from './TabDrawer';\nimport AddCustomer from './ModalAddCustomer';\nimport { connect } from 'react-redux';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { fetchProduct } from '../actions/ProductAction';\nimport { range } from 'rxjs';\nimport { chooseGuest } from '../actions/CustomerAction';\nimport { formatter, formatMoney } from '../helper/index';\nimport { BASE_IMG_URL, logicType } from '../constants/index';\nimport { cartUpdate, holdCart } from '../actions/CartAction';\nimport { fetchOrder, placeorder } from '../actions/OrderAction';\nimport ListProduct from './ListProduct';\nconst Checkout = (props) => {\n\n    const INITAL_CART = {\n        products: [{\n            qty: 0,\n            item: null\n        }],\n        comment: '',\n        customer: null,\n        total_price: 0,\n        staff: props.staff,\n    }\n\n    useEffect(() => {\n        if (props.processingPlaceorder) {\n            setTimeout(() => {\n                notification.success({\n                    description: \"order successfully\",\n                    message: 'notification'\n                })\n            }, 1000);\n        }\n    }, [props.processingPlaceorder])\n\n    useEffect(() => {\n        let cart_temp = Object.assign({}, props.cartProps);\n        cart_temp.customer = props.chosenCustomer;\n        props.cartChange(cart_temp);\n    }, [props.chosenCustomer]);\n\n\n    //state of component\n    const [visible, setVisible] = useState(false);\n    const [currentCustomer, setCurrentCustomer] = useState({});\n    const [tabDrawerVisible, setTabDrwerVisible] = useState(false);\n    const [isModalAddCustomerVisible, setIsModalAddCustomerVisible] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [keySearch, setKeySearch] = useState('');\n    const [isModalCommentVisible, setIsModalCommentVisible] = useState(false);\n\n    const isMounted = useRef(false);\n\n    // hanfle search function\n    useEffect(() => {\n        if (isMounted.current) {\n            props.fetchProduct([{\n                field: 'name',\n                value: '%25' + keySearch + '%25',\n                condition_type: 'like',\n                logic: logicType.OR\n            },\n            {\n                field: 'sku',\n                value: '%25' + keySearch + '%25',\n                condition_type: 'like',\n                logic: logicType.OR\n            }\n            ], currentPage, pageSize);\n            // isMounted.current = false;\n        } else {\n            isMounted.current = true\n        }\n    }, [keySearch])\n\n    let total = 0;\n    let total_price = 0;\n\n    const { TextArea } = Input;\n\n    const hide = () => {\n        setVisible(false);\n    };\n\n    const handleVisibleChange = visible => {\n        setVisible(visible);\n    };\n\n    const closeTabDrawer = () => {\n        setTabDrwerVisible(false)\n    }\n\n\n    const { Search } = Input;\n\n\n    const onSearch = (value) => {\n        setKeySearch(value);\n    }\n\n    const onInputChange = (e) => {\n        if (!e.target.value) {\n            setKeySearch('');\n        }\n    }\n\n    const handleModalAddCustomerVisible = (val) => {\n        setIsModalAddCustomerVisible(val);\n    }\n\n    const isEmpty = (obj) => {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                return false;\n            }\n        }\n\n        return JSON.stringify(obj) === JSON.stringify({});\n    }\n\n    const handlePagination = (page, size) => {\n        setCurrentPage(page);\n        setPageSize(size);\n        props.fetchProduct(null, page, size);\n    }\n\n\n\n    const onShowSizeChange = (current, size) => {\n        setPageSize(size);\n    }\n\n    const showTotal = () => {\n        return `Total ${total} items`\n    }\n\n    const getTotalItem = () => {\n        let total_item = 0;\n        props.cartProps.products.forEach((value, index) => {\n            total_item += value.qty;\n        });\n        return total_item;\n    }\n\n\n\n    const removeCustomer = () => {\n        props.removeCustomer();\n    }\n\n    const addToCart = (product) => {\n        let cart_temp = Object.assign({}, props.cartProps);\n        let isNewItems = true;\n        //check if product is exist in current cart\n        cart_temp.products.forEach((element, index) => {\n            if (!element.item) {\n                cart_temp.products[index].qty = 1;\n                cart_temp.products[index].item = product;\n                isNewItems = false;\n            } else if (JSON.stringify(product) === JSON.stringify(element.item)) {\n                cart_temp.products[index].qty++;\n                isNewItems = false\n            }\n\n        });\n\n        if (isNewItems) {\n            cart_temp.products.push({\n                item: product,\n                qty: 1\n            });\n        }\n\n        // caculate total_price\n        cart_temp.total_price += product.price;\n\n        props.cartChange(cart_temp);\n    }\n\n    // remove all item of cart\n    const onHoldCart = () => {\n        props.cartHold();\n    }\n\n    const onAddComment = () => {\n        setIsModalCommentVisible(true);\n    }\n\n    const handleCommentOk = () => {\n        setIsModalCommentVisible(false);\n    }\n\n    const handleCommentCancel = () => {\n        setIsModalCommentVisible(false);\n        let cart_temp = Object.assign({}, props.cartProps);\n        cart_temp.comment = '';\n        props.cartChange(cart_temp);\n    }\n\n    const onChangComment = (e) => {\n        let cart_temp = Object.assign({}, props.cartProps);\n        cart_temp.comment = e.target.value;\n        props.cartChange(cart_temp);\n    }\n\n    const onPlaceorder = () => {\n        const orderPayload = props.posInfo;\n        props.placeorder(props.cartProps, orderPayload);\n    }\n\n    return (\n        <div>\n            { (!props.isLoadingOrder && !props.isLoadingCustomer) ? <div><Row className=\"row-header\">\n                <Col span={1} className='align-center col1'>\n                    <a onClick={() => setTabDrwerVisible(true)}><img id='menu-icon' src=\"icons8-menu-48.png\" alt=\"image\"></img></a>\n                </Col>\n                <Col span={5} className='align-center col2'>\n                    <h2 style={{ margin: + \"15\" }}>Cart</h2>\n                </Col>\n                <Col span={18} className='search-bar col3'>\n                    <Popover\n                        content={<a onClick={() => (hide)}>Close</a>}\n                        title=\"Title\"\n                        trigger=\"click\"\n                        visible={visible}\n                        onVisibleChange={handleVisibleChange}\n                        className='popover-product'\n                    >\n                        <Button>Products</Button>\n                    </Popover>\n                    <Search placeholder=\"input search text\" onSearch={onSearch} onChange={onInputChange} style={{ width: 1000 }} />\n                </Col>\n            </Row>\n\n                <Row className=\"row-content\">\n                    <Col span={1} className='align-center col1'>\n                        <div className='icons-bar'>\n                            <a onClick={onAddComment}>\n                                <img src='icons8-comments.png'></img>\n                            </a>\n                        </div>\n                        <div className='icons-bar'>\n                            <a>\n                                <img src='delete-forever.png'></img>\n                            </a>\n                        </div>\n                        <div className='icons-bar'>\n                            <a>\n                                <img src='icons8-create-order-64.png'></img>\n                            </a>\n                        </div>\n                        {props.cartProps.total_price > 0 ? (<div className='icon-cart'>\n                            <a style={{ position: 'relative' }}>\n                                <img src='cart.png'></img>\n                                <p className='cart-item-qty'>{getTotalItem()}</p>\n                            </a>\n                        </div>) : ''}\n                    </Col>\n                    <Col span={5} className='align-center col2 cart-side'>\n                        <div class='customer-side'>\n                            <div class='customer-link-side'>\n                                <a style={{ display: \"flex\", width: '85%' }} onClick={() => { setIsModalAddCustomerVisible(true); }}>\n                                    <img src='icons8-customer.png' alt='customer' id='icon-customer'></img>\n                                    <h2 style={{ width: '80%', margin: 15, textAlign: 'left' }}>{props.chosenCustomer ? (props.chosenCustomer.firstname + ' ' + props.chosenCustomer.lastname) : 'Guest'}</h2>\n\n                                </a>\n                                {props.chosenCustomer ? <a>\n                                    <img onClick={removeCustomer} src='remove.png' style={{ right: '10px', top: '15px', position: 'absolute', width: '20px' }}></img>\n                                </a> : ''}\n                            </div>\n                        </div>\n\n\n                        <div className='cart-content'>\n                            {props.cartProps.products.map((value, index) => {\n                                if (value.item) {\n                                    return (\n                                        <a className='cart-item'>\n                                            <div className='cart-item-image'>\n                                                <img src={BASE_IMG_URL + value.item.custom_attributes[0].value} />\n                                                <p className='cart-item-qty'>{value.qty}</p>\n                                            </div>\n                                            <h3 className='cart-item-name'>{value.item.name}</h3>\n                                            <p className='cart-item-price'>${value.item.price * value.qty}</p>\n                                        </a>\n                                    )\n                                }\n                            })}\n                        </div>\n\n                        <div className=\"interact-cart\">\n                            <a className='hold-button' onClick={onHoldCart}><h1>Hold</h1></a>\n                            <a className='placeorder-button' onClick={onPlaceorder}><h1>${formatMoney(props.cartProps.total_price)}</h1></a>\n                        </div>\n                    </Col>\n\n                    {/* side for product */}\n                    <Col span={18} className='col3' style={{ backgroundColor: '#f0f0f0' }}>\n                        {(!props.processingPlaceorder && !props.isLoadingProduct) ?\n                            <ListProduct currentPage={currentPage}\n                                setCurrentPage={setCurrentPage}\n                                pageSize={pageSize}\n                                setPageSize={setPageSize}\n                            /> : <div style={{ textAlign: 'center', margin: '45vh' }}>\n                                <Space size='middle'>\n                                    <Spin size='large' />\n                                </Space>\n                            </div>}\n\n                    </Col>\n                </Row>\n\n                <TabDrawer visible={tabDrawerVisible} closeTabDrawer={closeTabDrawer} />\n                <AddCustomer isModalVisible={isModalAddCustomerVisible} setIsModalVisiblle={handleModalAddCustomerVisible} />\n\n                {/* comment side */}\n                <Modal title=\"Add comment to this order\" visible={isModalCommentVisible} onOk={handleCommentOk} onCancel={handleCommentCancel}>\n                    <TextArea rows={4} onChange={onChangComment} value={props.cartProps.comment} />\n                </Modal></div> : <div style={{ textAlign: 'center', margin: '45vh' }}>\n                    <Space size='middle'>\n                        <Spin size='large' />\n                    </Space>\n                </div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    // if (state.product.data) {\n    return {\n        listProduct: state.product.data.items,\n        total_count: state.product.data.total_count,\n        chosenCustomer: state.customer.chosenCustomer,\n        staff: state.staff.staff.staff,\n        cartProps: state.cart,\n        isLoadingProduct: state.product.isLoadingProduct,\n        isLoadingOrder: state.order.isLoadingOrder,\n        isLoadingCustomer: state.customer.isLoadingCustomer,\n        posInfo: state.staff.posInfo,\n        processingPlaceorder: state.cart.processingPlaceorder,\n    }\n    // }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        fetchProduct: (filter, page, pageSize) => dispatch(fetchProduct(filter, page, pageSize)),\n        removeCustomer: () => dispatch(chooseGuest()),\n        cartChange: (payload) => dispatch(cartUpdate(payload)),\n        cartHold: () => dispatch(holdCart()),\n        placeorder: (cart, orderPayload) => {\n            dispatch(placeorder(cart));\n            dispatch(fetchProduct(null, 1, 10));\n            dispatch(fetchOrder(orderPayload));\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","/home/rogers/simple-pos/src/pages/TabDrawer.jsx",["181","182","183","184","185","186","187"],"/home/rogers/simple-pos/src/pages/ModalAddCustomer.jsx",["188","189","190","191","192"],"\nimport React, { useState } from 'react';\nimport { Modal, Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { chooseCustomer } from '../actions/CustomerAction';\n\nconst AddCustomer = (props) => {\n    const { Search } = Input;\n\n    const [keySearch, setKeySearch] = useState('');\n\n    const handleOk = () => {\n        props.setIsModalVisiblle(false);\n    }\n\n    const handeCancle = () => {\n        props.setIsModalVisiblle(false);\n    }\n\n    const onSearch = (value, event) => {\n        setKeySearch(value);\n    }\n\n    const onChange = (e) => {\n        const value = e.target.value;\n        if (value == '')\n            setKeySearch('');\n    }\n\n    const chooseCustomer = (customer) => {\n        props.choooseCustomer(customer);\n        props.setIsModalVisiblle(false);\n    }\n\n    return (\n        <>\n            <Modal\n                visible={props.isModalVisible}\n                onOk={handleOk}\n                onCancel={handeCancle}\n                width={375}\n            >\n                <br />\n                <Search placeholder=\"input search text\" onSearch={onSearch} style={{ marginTop: \"10px\" }} onChange={onChange} />\n                <br />\n                {props.list_customer.map((value, index) => {\n                    if (keySearch) {\n                        if (value.firstname.includes(keySearch) || value.lastname.includes(keySearch)) {\n                            return (\n                                <a onClick={() => chooseCustomer(value)} key={value.id}><p>{value.firstname + ' ' + value.lastname}</p></a>\n                            )\n                        }\n                    } else {\n                        return (\n                            <a onClick={() => chooseCustomer(value)} key={value.id}><p>{value.firstname + ' ' + value.lastname}</p></a>\n                        )\n                    }\n                })}\n            </Modal>\n        </>\n    );\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        list_customer: state.customer.data.items,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        choooseCustomer: (customer) => dispatch(chooseCustomer(customer)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCustomer);","/home/rogers/simple-pos/src/reducers/rootReducer.js",[],"/home/rogers/simple-pos/src/epics/rootEpic.js",["193"],"import { combineEpics } from 'redux-observable';\nimport { staff } from '../reducers/staffReducer';\n\nimport {fetchProductEpic} from './ProductEpic';\nimport {staffLogin} from './StaffEpic';\nimport {fetchOrderEpic, placeorder} from './OrderEpic';\nimport {fetchCustomerEpic} from './CustomerEpic';\n\nconst rootEpic = combineEpics(\n    fetchProductEpic,\n    staffLogin,\n    fetchOrderEpic,\n    fetchCustomerEpic,\n    placeorder\n);\n\nexport default rootEpic;","/home/rogers/simple-pos/src/reducers/staffReducer.js",[],"/home/rogers/simple-pos/src/epics/StaffEpic.js",["194","195","196","197","198","199"],"import { ofType } from 'redux-observable';\nimport { map, switchMap, mergeMap } from 'rxjs/operators';\nimport { actionType } from '../constants/index';\nimport { login, loginSuccessfully, loginFail } from '../actions/StaffAction';\nimport { ajax } from \"rxjs/ajax\";\nimport { dispatch } from 'rxjs/internal/observable/pairs';\n\n\nconst staffLogin = (action$, state$) => action$.pipe(\n    ofType(actionType.LOGIN),\n    mergeMap(async action => {\n        let result = {};\n        await fetch(`http://127.0.0.1/magento/rest/V1/api/security/login`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                data:\n                {\n                    email: action.payload.email,\n                    password: action.payload.password\n                }\n            }),\n            mode: \"cors\"\n        }).then(response => response.json())\n            .then(data => { result = data });\n        if (result.code == 200) {\n            return loginSuccessfully(result);\n        } else {\n            return loginFail(result);\n        }\n\n    })\n);\n\n\n\n\nexport {\n    staffLogin,\n}","/home/rogers/simple-pos/src/epics/ProductEpic.js",["200","201","202","203"],"import {ofType} from 'redux-observable';\nimport { map, switchMap, mergeMap } from 'rxjs/operators';\nimport { actionType } from '../constants/index';\nimport { fetchProduct, fetchProductFulfiled } from '../actions/ProductAction';\n\n\nconst fetchProductEpic = (action$, state$) => action$.pipe(\n    ofType(actionType.FETCH_PRODUCT),\n    mergeMap(async action => {\n        let result = {};\n        await fetch(`http://127.0.0.1/magento/rest/V1/api/products/getProduct?`+ action.payload.url, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': state$.value.staff.staff.staff.token,\n                'Id': state$.value.staff.staff.staff.id\n            },\n            mode: \"cors\"\n        }).then(response => response.json())\n            .then(data => { result = data });\n\n        const listId = result.items.map(item => item.id);\n\n        let addtionalInfo = [];\n        await await fetch(`http://127.0.0.1/magento/rest/V1/api/products/getAdditionalInfo`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'id': listId,\n            }),\n            mode: \"cors\"\n        }).then(response => response.json())\n            .then(data => { addtionalInfo = data });\n\n            \n        addtionalInfo.map( (value, index) => {\n            result.items[index].parent_id = value.parent_id;\n            result.items[index].qty = value.qty;\n            result.items[index].currency_symbol = value.currency_symbol;\n            result.items[index].currency_code = value.currency_code;\n\n        })\n        \n        return fetchProductFulfiled(result);\n\n    })\n);\n\n\nexport {\n    fetchProductEpic,\n}","/home/rogers/simple-pos/src/reducers/productReducer.js",[],"/home/rogers/simple-pos/src/constants/index.js",[],"/home/rogers/simple-pos/src/actions/ProductAction.js",["204","205"],"import { actionType } from '../constants/index'\nimport { logicType } from '../constants/index'\n\nconst fetchProduct = (filter = null, currentPage = 0, pageSize = 1000) => {\n    let url = '';\n    let index_and = 0;\n    let index_or = 0;\n\n    \n    if (filter) {\n        url += 'searchCriteria[filter_groups][0][filters][0][field]=entity_id' +\n            '&searchCriteria[filter_groups][0][filters][0][value]=10000' +\n            '&searchCriteria[filter_groups][0][filters][0][condition_type]=neq';\n        if (filter.length > 0) {\n\n            filter.forEach((element, index) => {\n                if (element.logic == logicType.OR) {\n                    index_or++;\n                }\n    \n                if (element.logic == logicType.AND) {\n                    index_and++;\n                }\n\n                url += '&searchCriteria[filter_groups][' + index_and + '][filters][' + index_or + '][field]=' + element.field;\n                url += '&searchCriteria[filter_groups][' + index_and + '][filters][' + index_or + '][value]=' + element.value;\n                url += '&searchCriteria[filter_groups][' + index_and + '][filters][' + index_or + '][condition_type]=' + element.condition_type;\n            });\n        }\n        url += '&searchCriteria[pageSize]=' + pageSize + '&searchCriteria[currentPage]=' + currentPage;\n    }\n\n    else {\n        url = 'searchCriteria[filter_groups][0][filters][0][field]=entity_id' +\n            '&searchCriteria[filter_groups][0][filters][0][value]=10000' +\n            '&searchCriteria[filter_groups][0][filters][0][condition_type]=neq' +\n            '&searchCriteria[pageSize]=' + pageSize + '&searchCriteria[currentPage]=' + currentPage\n    }\n    return {\n        type: actionType.FETCH_PRODUCT,\n        payload: {\n            url: url\n        }\n    }\n}\n\n\nconst fetchProductFulfiled = (payload) => ({\n    type: actionType.FETCH_PRODUCT_FULFILED,\n    payload: payload\n})\n\nexport {\n    fetchProduct,\n    fetchProductFulfiled\n}","/home/rogers/simple-pos/src/actions/StaffAction.js",[],"/home/rogers/simple-pos/src/pages/ChooseLocation.jsx",["206","207"],"import { chooseLocation } from '../actions/StaffAction';\nimport {fetchCustomer} from '../actions/CustomerAction';\nimport {fetchOrder} from '../actions/OrderAction';\nimport {fetchProduct} from '../actions/ProductAction';\nimport { Row, Col } from 'antd';\nimport './css/chooseLocation.css';\n\nconst { connect } = require(\"react-redux\")\n\n\nconst ChooseLocation = (props) => {\n\n    const dispatchChooseLoaction = (payload) => {\n        props.chooseLocation(payload);\n    }\n\n    return (\n        <div>\n            <Row>\n                <Col span={9} >\n                </Col>\n                <Col span={6} >\n                    <div className='pos-wrapper'>\n                        <img src='/icon-login.png' id='icon-magestore' ></img>\n                        {props.staff ? props.staff.list_pos.map(element => {\n                            return (\n                                <a onClick={() => dispatchChooseLoaction(element)} className='posElement'>\n                                    <h1>{element.name}</h1>\n                                </a>\n                            )\n                        }): ''}\n                        <p style={{textAlign: 'center'}}>please choose your location</p>\n                    </div>\n                </Col>\n                <Col span={9} >\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        staff: state.staff.staff,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        chooseLocation: (payload) => {\n            dispatch(chooseLocation(payload));\n            dispatch(fetchProduct(null, 1, 10));\n            dispatch(fetchOrder(payload));\n            dispatch(fetchCustomer());\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseLocation);","/home/rogers/simple-pos/src/actions/CustomerAction.js",[],"/home/rogers/simple-pos/src/actions/OrderAction.js",[],"/home/rogers/simple-pos/src/epics/OrderEpic.js",["208","209","210"],"import { ofType } from 'redux-observable';\nimport { map, switchMap, mergeMap } from 'rxjs/operators';\nimport { actionType } from '../constants/index';\nimport { fetOrderFulfiled, fetchOrder, placeorderFulfiled } from '../actions/OrderAction';\n\n\nconst fetchOrderEpic = (action$, state$) => action$.pipe(\n    ofType(actionType.FETCH_ORDER),\n    mergeMap(async action => {\n        let result = {};\n        await fetch(`http://127.0.0.1/magento/rest/V1/api/orders/getOrder/` + action.payload.id, {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': state$.value.staff.staff.staff.token,\n                'Id': state$.value.staff.staff.staff.id\n            },\n            mode: \"cors\"\n        }).then(response => response.json())\n            .then(data => { result = data });\n\n        return fetOrderFulfiled(result);\n\n    })\n);\n\n\nconst placeorder = (action$, state$) => action$.pipe(\n    ofType(actionType.PLACEORDER),\n    mergeMap(async (action) => {\n        debugger\n        let result = {};\n        const pos_id = state$.value.staff.posInfo.id;\n        let bodyData = getOrderInfo(action.payload, pos_id);\n        await fetch(`http://127.0.0.1/magento/rest/V1/api/orders/createOrder`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode: \"cors\",\n            body: JSON.stringify(bodyData)\n        }).then(response => response.json())\n            .then(data => { result = data });\n\n        // return fetchOrder({\n        //     id: pos_id\n        // });\n\n        console.log(result);\n\n        return placeorderFulfiled();\n\n    })\n);\n\n\nconst getOrderInfo = (cart, pos_id) => {\n    let initial_result = {\n        \"data\": {\n            \"currency_id\": \"USD\",\n            \"email\": \"rogers@trueplus.vn\",\n            \"shipping_address\": {\n                \"firstname\": \"jhon\",\n                \"lastname\": \"Deo\",\n                \"street\": \"xxxx\",\n                \"city\": \"xxxxx\",\n                \"country_id\": \"US\",\n                \"region\": \"Idaho\",\n                \"postcode\": \"43244\",\n                \"region_id\": \"1\",\n                \"telephone\": \"52332\",\n                \"fax\": \"32423\",\n                \"save_in_address_book\": 1\n            },\n            \"items\": [\n                {\n                    \"product_id\": \"4\",\n                    \"qty\": 1,\n                    \"price\": 34\n                }\n            ]\n        },\n        \"pos_id\": pos_id\n    }\n\n    cart.products.forEach(element => {\n        initial_result.data.items.push({\n            \"product_id\": element.item.id,\n            \"qty\": element.qty,\n            \"price\": element.item.price * element.qty\n        });\n\n    });\n\n    if (cart.customer) {\n        initial_result.data.email = cart.customer.email;\n        initial_result.data.shipping_address.firstname = cart.customer.firstname;\n        initial_result.data.shipping_address.lastname = cart.customer.lastname;\n        if (cart.customer.addresses.length > 0) {\n            // address = cart.customer.addresses[0];\n            initial_result = {\n                ...initial_result,\n                shipping_address: {\n                    \"firstname\": cart.customer.firstname,\n                    \"lastname\": cart.customer.lastname,\n                    \"street\": cart.customer.addresses[0].street[0],\n                    \"city\": cart.customer.addresses[0].city,\n                    \"country_id\": cart.customer.addresses[0].country_id,\n                    \"region\": cart.customer.addresses[0].region,\n                    \"postcode\": cart.customer.addresses[0].postcode,\n                    \"region_id\": cart.customer.addresses[0].region_id,\n                    \"telephone\": cart.customer.addresses[0].telephone,\n                    \"fax\": \"32423\",\n                    \"save_in_address_book\": 1\n                }\n            }\n        }\n    }\n\n    return initial_result;\n}\n\nexport {\n    fetchOrderEpic,\n    placeorder\n}","/home/rogers/simple-pos/src/epics/CustomerEpic.js",["211","212","213"],"import { ofType } from 'redux-observable';\nimport { map, switchMap, mergeMap } from 'rxjs/operators';\nimport { actionType } from '../constants/index';\nimport { fetchCustomer, fetchCustomerFulfiled } from '../actions/CustomerAction';\n\n\nconst fetchCustomerEpic = (action$, state$) => action$.pipe(\n    ofType(actionType.FETCH_CUSTOMER),\n    mergeMap(async action => {\n        let result = {};\n        await fetch(`http://127.0.0.1/magento/rest/V1/api/customers/getCustomer`, {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': state$.value.staff.staff.staff.token,\n                'Id': state$.value.staff.staff.staff.id\n            }   \n        }).then(response => response.json())\n            .then(data => { result = data });\n        return fetchCustomerFulfiled(result);\n\n    })\n);\n\n\nexport {\n    fetchCustomerEpic,\n}","/home/rogers/simple-pos/src/reducers/customerReducer.js",[],"/home/rogers/simple-pos/src/reducers/orderReducers.js",[],"/home/rogers/simple-pos/src/helper/index.js",[],"/home/rogers/simple-pos/src/actions/CartAction.js",[],"/home/rogers/simple-pos/src/reducers/cartReducer.js",[],"/home/rogers/simple-pos/src/pages/ListProduct.jsx",["214","215","216","217","218","219","220"],"import { Pagination } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { cartUpdate, holdCart } from \"../actions/CartAction\";\nimport { chooseGuest } from \"../actions/CustomerAction\";\nimport { fetchOrder, placeorder } from \"../actions/OrderAction\";\nimport { fetchProduct } from \"../actions/ProductAction\";\nimport { BASE_IMG_URL } from \"../constants\";\n\n\nconst ListProduct = (props) => {\n\n    let total = 0; \n\n    const addToCart = (product) => {\n        let cart_temp = Object.assign({}, props.cartProps);\n        let isNewItems = true;\n        //check if product is exist in current cart\n        cart_temp.products.forEach((element, index) => {\n            if (!element.item) {\n                cart_temp.products[index].qty = 1;\n                cart_temp.products[index].item = product;\n                isNewItems = false;\n            } else if (JSON.stringify(product) === JSON.stringify(element.item)) {\n                cart_temp.products[index].qty++;\n                isNewItems = false\n            }\n\n        });\n\n        if (isNewItems) {\n            cart_temp.products.push({\n                item: product,\n                qty: 1\n            });\n        }\n\n        // caculate total_price\n        cart_temp.total_price += product.price;\n\n        props.cartChange(cart_temp);\n    }\n\n    const showTotal = () => {\n        return `Total ${total} items`\n    }\n\n    const handlePagination = (page, size) => {\n        props.setCurrentPage(page);\n        props.setPageSize(size);\n        props.fetchProduct(null, page, size);\n    }\n\n    const onShowSizeChange = (current, size) => {\n        props.setPageSize(size);\n    }\n\n    return (\n        <div>\n            <ul style={{ listStyleType: 'none', display: 'flex', flexWrap: 'wrap', paddingLeft: '10px' }}>\n                {props.listProduct.map((value, index) => {\n                    if (value.type_id == 'simple' && value.qty > 0) {\n                        // if (value.name.toLowerCase().includes(keySearch.toLowerCase()) || value.sku.toLowerCase().includes(keySearch.toLowerCase())) {\n                        // setTotalItemCurrentPage(e => e + 1);\n                        total++;\n                        return (\n                            <li className='product-item'>\n                                <a onClick={() => addToCart(value)}>\n                                    <img className='thumnail-image-product' src={BASE_IMG_URL + value.custom_attributes[0].value} ></img>\n                                    <div>\n                                        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                                            <h3 style={{ width: '75%', paddingLeft: '10px' }}>{value.name} </h3>\n                                            <h3 style={{ width: '25%' }}>{value.qty}</h3>\n                                        </div>\n                                        <div style={{ display: 'flex' }}>\n                                            <h3 style={{ width: + 75 + '%', paddingLeft: '10px' }}>{value.sku}</h3>\n                                            <h3 style={{ width: + 20 + '%' }}>{value.price} $</h3>\n                                        </div>\n                                    </div>\n                                </a>\n                            </li>\n                        )\n                        // }\n                    }\n\n                })}\n            </ul>\n            <Pagination\n                total={props.total_count}\n                showSizeChanger\n                showQuickJumper\n                showTotal={showTotal}\n                onChange={handlePagination}\n                current={props.currentPage}\n                onShowSizeChange={onShowSizeChange}\n                pageSize={props.pageSize}\n            />\n            {/* <Link to=\"/order-hostory\">Home</Link> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    // if (state.product.data) {\n        return {\n            listProduct: state.product.data.items,\n            total_count: state.product.data.total_count,\n            chosenCustomer: state.customer.chosenCustomer,\n            staff: state.staff.staff.staff,\n            cartProps: state.cart,\n            isLoadingProduct: state.product.isLoadingProduct,\n            isLoadingOrder: state.order.isLoadingOrder,\n            isLoadingCustomer: state.customer.isLoadingCustomer,\n            posInfo: state.staff.posInfo,\n            processingPlaceorder: state.cart.processingPlaceorder,\n        }\n    // }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        fetchProduct: (filter, page, pageSize) => dispatch(fetchProduct(filter, page, pageSize)),\n        removeCustomer: () => dispatch(chooseGuest()),\n        cartChange: (payload) => dispatch(cartUpdate(payload)),\n        cartHold: () => dispatch(holdCart()),\n        placeorder: (cart, orderPayload) => {\n            dispatch(placeorder(cart));\n            dispatch(fetchProduct(null, 1, 10));\n            dispatch(fetchOrder(orderPayload));\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListProduct);","/home/rogers/simple-pos/src/pages/OrderHistory.jsx",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":10,"column":37,"nodeType":"227","messageId":"228","endLine":10,"endColumn":41},{"ruleId":"225","severity":1,"message":"229","line":14,"column":31,"nodeType":"227","messageId":"228","endLine":14,"endColumn":44},{"ruleId":"225","severity":1,"message":"230","line":18,"column":9,"nodeType":"227","messageId":"228","endLine":18,"endColumn":16},{"ruleId":"231","severity":1,"message":"232","line":25,"column":6,"nodeType":"233","endLine":25,"endColumn":34,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":29,"column":25,"nodeType":"237","messageId":"238","endLine":29,"endColumn":27},{"ruleId":"225","severity":1,"message":"239","line":66,"column":10,"nodeType":"227","messageId":"228","endLine":66,"endColumn":14},{"ruleId":"225","severity":1,"message":"240","line":70,"column":10,"nodeType":"227","messageId":"228","endLine":70,"endColumn":15},{"ruleId":"225","severity":1,"message":"241","line":74,"column":10,"nodeType":"227","messageId":"228","endLine":74,"endColumn":15},{"ruleId":"225","severity":1,"message":"242","line":1,"column":10,"nodeType":"227","messageId":"228","endLine":1,"endColumn":14},{"ruleId":"225","severity":1,"message":"243","line":9,"column":12,"nodeType":"227","messageId":"228","endLine":9,"endColumn":19},{"ruleId":"225","severity":1,"message":"244","line":9,"column":21,"nodeType":"227","messageId":"228","endLine":9,"endColumn":31},{"ruleId":"225","severity":1,"message":"229","line":9,"column":33,"nodeType":"227","messageId":"228","endLine":9,"endColumn":46},{"ruleId":"225","severity":1,"message":"245","line":11,"column":12,"nodeType":"227","messageId":"228","endLine":11,"endColumn":17},{"ruleId":"225","severity":1,"message":"246","line":12,"column":12,"nodeType":"227","messageId":"228","endLine":12,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":78,"column":17,"nodeType":"249","endLine":78,"endColumn":88},{"ruleId":"225","severity":1,"message":"250","line":1,"column":44,"nodeType":"227","messageId":"228","endLine":1,"endColumn":54},{"ruleId":"225","severity":1,"message":"251","line":7,"column":10,"nodeType":"227","messageId":"228","endLine":7,"endColumn":18},{"ruleId":"225","severity":1,"message":"252","line":9,"column":10,"nodeType":"227","messageId":"228","endLine":9,"endColumn":15},{"ruleId":"225","severity":1,"message":"253","line":11,"column":10,"nodeType":"227","messageId":"228","endLine":11,"endColumn":19},{"ruleId":"225","severity":1,"message":"254","line":18,"column":11,"nodeType":"227","messageId":"228","endLine":18,"endColumn":22},{"ruleId":"231","severity":1,"message":"255","line":44,"column":8,"nodeType":"233","endLine":44,"endColumn":30,"suggestions":"256"},{"ruleId":"225","severity":1,"message":"257","line":49,"column":12,"nodeType":"227","messageId":"228","endLine":49,"endColumn":27},{"ruleId":"225","severity":1,"message":"258","line":49,"column":29,"nodeType":"227","messageId":"228","endLine":49,"endColumn":47},{"ruleId":"231","severity":1,"message":"259","line":79,"column":8,"nodeType":"233","endLine":79,"endColumn":19,"suggestions":"260"},{"ruleId":"225","severity":1,"message":"261","line":82,"column":9,"nodeType":"227","messageId":"228","endLine":82,"endColumn":20},{"ruleId":"225","severity":1,"message":"262","line":116,"column":11,"nodeType":"227","messageId":"228","endLine":116,"endColumn":18},{"ruleId":"225","severity":1,"message":"263","line":126,"column":11,"nodeType":"227","messageId":"228","endLine":126,"endColumn":27},{"ruleId":"225","severity":1,"message":"264","line":134,"column":11,"nodeType":"227","messageId":"228","endLine":134,"endColumn":27},{"ruleId":"225","severity":1,"message":"265","line":138,"column":11,"nodeType":"227","messageId":"228","endLine":138,"endColumn":20},{"ruleId":"225","severity":1,"message":"266","line":156,"column":11,"nodeType":"227","messageId":"228","endLine":156,"endColumn":20},{"ruleId":"267","severity":1,"message":"268","line":220,"column":21,"nodeType":"249","endLine":220,"endColumn":65},{"ruleId":"269","severity":1,"message":"270","line":220,"column":65,"nodeType":"249","endLine":220,"endColumn":122},{"ruleId":"267","severity":1,"message":"268","line":227,"column":34,"nodeType":"249","endLine":227,"endColumn":60},{"ruleId":"267","severity":1,"message":"268","line":243,"column":29,"nodeType":"249","endLine":243,"endColumn":55},{"ruleId":"247","severity":1,"message":"248","line":244,"column":33,"nodeType":"249","endLine":244,"endColumn":64},{"ruleId":"267","severity":1,"message":"268","line":248,"column":29,"nodeType":"249","endLine":248,"endColumn":32},{"ruleId":"247","severity":1,"message":"248","line":249,"column":33,"nodeType":"249","endLine":249,"endColumn":63},{"ruleId":"267","severity":1,"message":"268","line":253,"column":29,"nodeType":"249","endLine":253,"endColumn":32},{"ruleId":"247","severity":1,"message":"248","line":254,"column":33,"nodeType":"249","endLine":254,"endColumn":71},{"ruleId":"267","severity":1,"message":"268","line":258,"column":29,"nodeType":"249","endLine":258,"endColumn":65},{"ruleId":"247","severity":1,"message":"248","line":259,"column":33,"nodeType":"249","endLine":259,"endColumn":53},{"ruleId":"267","severity":1,"message":"268","line":267,"column":33,"nodeType":"249","endLine":267,"endColumn":134},{"ruleId":"267","severity":1,"message":"268","line":272,"column":57,"nodeType":"249","endLine":272,"endColumn":60},{"ruleId":"247","severity":1,"message":"248","line":273,"column":37,"nodeType":"249","endLine":273,"endColumn":160},{"ruleId":"271","severity":1,"message":"272","line":280,"column":74,"nodeType":"273","messageId":"274","endLine":280,"endColumn":76},{"ruleId":"267","severity":1,"message":"268","line":283,"column":41,"nodeType":"249","endLine":283,"endColumn":66},{"ruleId":"247","severity":1,"message":"248","line":285,"column":49,"nodeType":"249","endLine":285,"endColumn":115},{"ruleId":"267","severity":1,"message":"268","line":297,"column":29,"nodeType":"249","endLine":297,"endColumn":77},{"ruleId":"267","severity":1,"message":"268","line":298,"column":29,"nodeType":"249","endLine":298,"endColumn":85},{"ruleId":"225","severity":1,"message":"275","line":2,"column":18,"nodeType":"227","messageId":"228","endLine":2,"endColumn":24},{"ruleId":"225","severity":1,"message":"276","line":2,"column":26,"nodeType":"227","messageId":"228","endLine":2,"endColumn":31},{"ruleId":"225","severity":1,"message":"277","line":2,"column":33,"nodeType":"227","messageId":"228","endLine":2,"endColumn":37},{"ruleId":"225","severity":1,"message":"251","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":18},{"ruleId":"225","severity":1,"message":"243","line":11,"column":10,"nodeType":"227","messageId":"228","endLine":11,"endColumn":17},{"ruleId":"225","severity":1,"message":"244","line":11,"column":19,"nodeType":"227","messageId":"228","endLine":11,"endColumn":29},{"ruleId":"225","severity":1,"message":"278","line":22,"column":9,"nodeType":"227","messageId":"228","endLine":22,"endColumn":13},{"ruleId":"225","severity":1,"message":"275","line":3,"column":17,"nodeType":"227","messageId":"228","endLine":3,"endColumn":23},{"ruleId":"235","severity":1,"message":"236","line":26,"column":19,"nodeType":"237","messageId":"238","endLine":26,"endColumn":21},{"ruleId":"271","severity":1,"message":"272","line":46,"column":57,"nodeType":"273","messageId":"274","endLine":46,"endColumn":59},{"ruleId":"267","severity":1,"message":"268","line":50,"column":33,"nodeType":"249","endLine":50,"endColumn":89},{"ruleId":"267","severity":1,"message":"268","line":55,"column":29,"nodeType":"249","endLine":55,"endColumn":85},{"ruleId":"225","severity":1,"message":"279","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":15},{"ruleId":"225","severity":1,"message":"280","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":13},{"ruleId":"225","severity":1,"message":"281","line":2,"column":15,"nodeType":"227","messageId":"228","endLine":2,"endColumn":24},{"ruleId":"225","severity":1,"message":"282","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":15},{"ruleId":"225","severity":1,"message":"283","line":5,"column":10,"nodeType":"227","messageId":"228","endLine":5,"endColumn":14},{"ruleId":"225","severity":1,"message":"251","line":6,"column":10,"nodeType":"227","messageId":"228","endLine":6,"endColumn":18},{"ruleId":"235","severity":1,"message":"236","line":29,"column":25,"nodeType":"237","messageId":"238","endLine":29,"endColumn":27},{"ruleId":"225","severity":1,"message":"280","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":13},{"ruleId":"225","severity":1,"message":"281","line":2,"column":15,"nodeType":"227","messageId":"228","endLine":2,"endColumn":24},{"ruleId":"225","severity":1,"message":"284","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":22},{"ruleId":"271","severity":1,"message":"285","line":39,"column":43,"nodeType":"273","messageId":"286","endLine":39,"endColumn":45},{"ruleId":"235","severity":1,"message":"236","line":17,"column":35,"nodeType":"237","messageId":"238","endLine":17,"endColumn":37},{"ruleId":"235","severity":1,"message":"236","line":21,"column":35,"nodeType":"237","messageId":"238","endLine":21,"endColumn":37},{"ruleId":"247","severity":1,"message":"248","line":24,"column":25,"nodeType":"249","endLine":24,"endColumn":73},{"ruleId":"267","severity":1,"message":"268","line":27,"column":33,"nodeType":"249","endLine":27,"endColumn":107},{"ruleId":"225","severity":1,"message":"280","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":13},{"ruleId":"225","severity":1,"message":"281","line":2,"column":15,"nodeType":"227","messageId":"228","endLine":2,"endColumn":24},{"ruleId":"225","severity":1,"message":"287","line":4,"column":28,"nodeType":"227","messageId":"228","endLine":4,"endColumn":38},{"ruleId":"225","severity":1,"message":"280","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":13},{"ruleId":"225","severity":1,"message":"281","line":2,"column":15,"nodeType":"227","messageId":"228","endLine":2,"endColumn":24},{"ruleId":"225","severity":1,"message":"288","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":23},{"ruleId":"225","severity":1,"message":"289","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":19},{"ruleId":"225","severity":1,"message":"290","line":2,"column":21,"nodeType":"227","messageId":"228","endLine":2,"endColumn":29},{"ruleId":"225","severity":1,"message":"226","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":62,"column":55,"nodeType":"273","messageId":"274","endLine":62,"endColumn":57},{"ruleId":"235","severity":1,"message":"236","line":63,"column":39,"nodeType":"237","messageId":"238","endLine":63,"endColumn":41},{"ruleId":"267","severity":1,"message":"268","line":69,"column":33,"nodeType":"249","endLine":69,"endColumn":69},{"ruleId":"247","severity":1,"message":"248","line":70,"column":37,"nodeType":"249","endLine":70,"endColumn":132},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'removeCookies' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCookies'. Either include it or remove the dependency array.","ArrayExpression",["293"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Home' is defined but never used.","'About' is defined but never used.","'Users' is defined but never used.","'Grid' is defined but never used.","'cookies' is assigned a value but never used.","'setCookies' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Pagination' is defined but never used.","'dispatch' is defined but never used.","'range' is defined but never used.","'formatter' is defined but never used.","'INITAL_CART' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["294"],"'currentCustomer' is assigned a value but never used.","'setCurrentCustomer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'pageSize', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["295"],"'total_price' is assigned a value but never used.","'isEmpty' is assigned a value but never used.","'handlePagination' is assigned a value but never used.","'onShowSizeChange' is assigned a value but never used.","'showTotal' is assigned a value but never used.","'addToCart' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Button' is defined but never used.","'Empty' is defined but never used.","'List' is defined but never used.","'data' is assigned a value but never used.","'staff' is defined but never used.","'map' is defined but never used.","'switchMap' is defined but never used.","'login' is defined but never used.","'ajax' is defined but never used.","'fetchProduct' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'fetchOrder' is defined but never used.","'fetchCustomer' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"Update the dependencies array to be: [props.isLogin, props.staff, setCookies]",{"range":"302","text":"303"},"Update the dependencies array to be: [props, props.chosenCustomer]",{"range":"304","text":"305"},"Update the dependencies array to be: [currentPage, keySearch, pageSize, props]",{"range":"306","text":"307"},[843,871],"[props.isLogin, props.staff, setCookies]",[1534,1556],"[props, props.chosenCustomer]",[2758,2769],"[currentPage, keySearch, pageSize, props]"]