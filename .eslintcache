[{"/home/rogers/simple-pos/src/index.js":"1","/home/rogers/simple-pos/src/App.js":"2","/home/rogers/simple-pos/src/reportWebVitals.js":"3","/home/rogers/simple-pos/src/store.js":"4","/home/rogers/simple-pos/src/pages/Login.jsx":"5","/home/rogers/simple-pos/src/pages/Checkout.jsx":"6","/home/rogers/simple-pos/src/pages/TabDrawer.jsx":"7","/home/rogers/simple-pos/src/pages/ModalAddCustomer.jsx":"8","/home/rogers/simple-pos/src/reducers/rootReducer.js":"9","/home/rogers/simple-pos/src/epics/rootEpic.js":"10","/home/rogers/simple-pos/src/reducers/staffReducer.js":"11","/home/rogers/simple-pos/src/epics/StaffEpic.js":"12","/home/rogers/simple-pos/src/epics/ProductEpic.js":"13","/home/rogers/simple-pos/src/reducers/productReducer.js":"14","/home/rogers/simple-pos/src/constants/index.js":"15","/home/rogers/simple-pos/src/actions/ProductAction.js":"16","/home/rogers/simple-pos/src/actions/StaffAction.js":"17","/home/rogers/simple-pos/src/pages/ChooseLocation.jsx":"18","/home/rogers/simple-pos/src/actions/CustomerAction.js":"19","/home/rogers/simple-pos/src/actions/OrderAction.js":"20","/home/rogers/simple-pos/src/epics/OrderEpic.js":"21","/home/rogers/simple-pos/src/epics/CustomerEpic.js":"22","/home/rogers/simple-pos/src/reducers/customerReducer.js":"23","/home/rogers/simple-pos/src/reducers/orderReducers.js":"24","/home/rogers/simple-pos/src/helper/index.js":"25","/home/rogers/simple-pos/src/actions/CartAction.js":"26","/home/rogers/simple-pos/src/reducers/cartReducer.js":"27","/home/rogers/simple-pos/src/pages/ListProduct.jsx":"28","/home/rogers/simple-pos/src/pages/OrderHistory.jsx":"29","/home/rogers/simple-pos/src/pages/OrderDetail.jsx":"30"},{"size":1276,"mtime":1609773993572,"results":"31","hashOfConfig":"32"},{"size":2169,"mtime":1610527667534,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1609036094512,"results":"34","hashOfConfig":"32"},{"size":959,"mtime":1609928293085,"results":"35","hashOfConfig":"32"},{"size":2936,"mtime":1609733836658,"results":"36","hashOfConfig":"32"},{"size":14914,"mtime":1610531915064,"results":"37","hashOfConfig":"32"},{"size":2010,"mtime":1610531904412,"results":"38","hashOfConfig":"32"},{"size":2266,"mtime":1609935521056,"results":"39","hashOfConfig":"32"},{"size":368,"mtime":1610259891381,"results":"40","hashOfConfig":"32"},{"size":575,"mtime":1610593705108,"results":"41","hashOfConfig":"32"},{"size":1589,"mtime":1610470738509,"results":"42","hashOfConfig":"32"},{"size":1218,"mtime":1609772291540,"results":"43","hashOfConfig":"32"},{"size":1820,"mtime":1609771646733,"results":"44","hashOfConfig":"32"},{"size":790,"mtime":1610470540340,"results":"45","hashOfConfig":"32"},{"size":967,"mtime":1610593002172,"results":"46","hashOfConfig":"32"},{"size":1964,"mtime":1610290140892,"results":"47","hashOfConfig":"32"},{"size":609,"mtime":1609930396083,"results":"48","hashOfConfig":"32"},{"size":1827,"mtime":1609898155291,"results":"49","hashOfConfig":"32"},{"size":500,"mtime":1609930401828,"results":"50","hashOfConfig":"32"},{"size":810,"mtime":1610593901492,"results":"51","hashOfConfig":"32"},{"size":5193,"mtime":1610594967123,"results":"52","hashOfConfig":"32"},{"size":898,"mtime":1609926093512,"results":"53","hashOfConfig":"32"},{"size":1398,"mtime":1610470987243,"results":"54","hashOfConfig":"32"},{"size":948,"mtime":1610594062624,"results":"55","hashOfConfig":"32"},{"size":567,"mtime":1609989705497,"results":"56","hashOfConfig":"32"},{"size":244,"mtime":1609990180383,"results":"57","hashOfConfig":"32"},{"size":1814,"mtime":1610472425711,"results":"58","hashOfConfig":"32"},{"size":8062,"mtime":1610480014073,"results":"59","hashOfConfig":"32"},{"size":7290,"mtime":1610605066175,"results":"60","hashOfConfig":"32"},{"size":5603,"mtime":1610603097630,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1nr9j9s",{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"64"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"64"},"/home/rogers/simple-pos/src/index.js",[],["140","141"],"/home/rogers/simple-pos/src/App.js",["142","143","144","145","146"],"import './App.css';\nimport \"antd/dist/antd.css\";\nimport Login from './pages/Login';\nimport Checkout from './pages/Checkout';\nimport './style.css';\nimport { connect } from 'react-redux';\nimport ChooseLocation from './pages/ChooseLocation';\nimport { useCookies } from 'react-cookie';\nimport { useEffect, useState } from 'react';\nimport { Route, Switch, useHistory, Link, Router } from 'react-router-dom';\nimport OrderHistory from './pages/OrderHistory';\nfunction App(props) {\n\n  const [cookies, setCookies, removeCookies] = useCookies(['isLogin', 'staff']);\n\n  const [isLogin, setIsLogin] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!(props.isLogin in window) && !(props.staff in window)) {\n      setCookies('isLogin', props.isLogin, { path: '/' });\n      setCookies('staff', props.staff, { path: '/' });\n    }\n  }, [props.isLogin, props.staff]);\n\n\n  useEffect(() => {\n    if (cookies.isLogin == 'true') {\n      setIsLogin(true);\n    } else {\n      setIsLogin(false);\n    }\n  }, [cookies.isLogin]);\n\n  if (!(isLogin in window) && isLogin) {\n    if (!props.isChooseLocation) {\n      history.push('/chooseLocation');\n      return (\n        <div>\n          <Switch>\n            <Route path=\"/chooseLocation\" component={ChooseLocation} exact />\n          </Switch>\n        </div>\n      );\n    }\n    else {\n      history.push('/checkout');\n\n      return (\n        <div>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} exact />\n            <Route path=\"/order-history\" component={OrderHistory} exact />\n          </Switch>\n        </div>\n      )\n    }\n  } else {\n    history.push('/login');\n    return (\n      <div>\n        <Switch>\n          <Route exact path='/login' component={Login} />\n        </Switch>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLogin: state.staff.isLogin,\n    isChooseLocation: state.staff.isChooseLocation,\n    isLoadingProduct: state.product.isLoadingProduct,\n    isLoadingOrder: state.order.isLoadingOrder,\n    isLoadingCustomer: state.customer.isLoadingCustomer,\n    staff: state.staff.staff,\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","/home/rogers/simple-pos/src/reportWebVitals.js",[],"/home/rogers/simple-pos/src/store.js",[],"/home/rogers/simple-pos/src/pages/Login.jsx",["147","148","149","150","151","152","153"],"import { Grid, Row, Col,Form, Input, Button, Checkbox } from 'antd';\nimport { useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport {login} from '../actions/StaffAction';\n\nconst Login = ({login}) => {\n    \n    const [cookies, setCookies, removeCookies] = useCookies(['isLogin, staff']);\n    \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n  \n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    };\n\n    const LoginForm = () => {\n        const onFinish = values => {\n            setEmail(values.username);\n            setPassword(values.password);\n            console.log('Success:', values);\n            login(values.username, values.password);\n\n        };\n\n        const onFinishFailed = errorInfo => {\n            console.log('Failed:', errorInfo);\n        };\n\n        return (\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"Username\"\n                    name=\"username\"\n                    rules={[{ required: true, message: 'Please input your username!' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        LOGIN\n              </Button>\n                </Form.Item>\n            </Form>\n        );\n    };\n\n    return (\n        <Row>\n            <Col span={9} >\n            </Col>\n            <Col span={6} className='login'>\n                <img src='/icon-login.png' style={{width: + '80', marginTop: + '200'}}></img>\n                <br />\n                <br />\n                <h2>Login</h2>\n                <br></br>\n                <LoginForm/>\n            </Col>\n            <Col span={9} >\n            </Col>\n        </Row>\n    );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return{\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        login: (email, password) => dispatch(login({\n            email: email,\n            password: password\n        }))\n    }   \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","/home/rogers/simple-pos/src/pages/Checkout.jsx",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"import { Row, Col, Input, Popover, Button, Pagination, Modal, Space, Spin, notification } from 'antd';\nimport { useEffect, useRef, useState } from 'react';\nimport './css/checkout.css';\nimport TabDrawer from './TabDrawer';\nimport AddCustomer from './ModalAddCustomer';\nimport { connect } from 'react-redux';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { fetchProduct } from '../actions/ProductAction';\nimport { range } from 'rxjs';\nimport { chooseGuest } from '../actions/CustomerAction';\nimport { formatter, formatMoney } from '../helper/index';\nimport { BASE_IMG_URL, logicType } from '../constants/index';\nimport { cartUpdate, holdCart } from '../actions/CartAction';\nimport { fetchOrder, placeorder } from '../actions/OrderAction';\nimport ListProduct from './ListProduct';\nimport { useHistory } from 'react-router-dom';\nconst Checkout = (props) => {\n\n    const INITAL_CART = {\n        products: [{\n            qty: 0,\n            item: null\n        }],\n        comment: '',\n        customer: null,\n        total_price: 0,\n        staff: props.staff,\n    }\n\n    useEffect(() => {\n        if (props.processingPlaceorder) {\n            setTimeout(() => {\n                notification.success({\n                    description: \"order successfully\",\n                    message: 'notification'\n                })\n            }, 1000);\n        }\n        setMark(Math.random());\n    }, [props.processingPlaceorder])\n\n    useEffect(() => {\n        let cart_temp = Object.assign({}, props.cartProps);\n        cart_temp.customer = props.chosenCustomer;\n        props.cartChange(cart_temp);\n    }, [props.chosenCustomer]);\n\n\n    //state of component\n    const [visible, setVisible] = useState(false);\n    const [currentCustomer, setCurrentCustomer] = useState({});\n    const [tabDrawerVisible, setTabDrwerVisible] = useState(false);\n    const [isModalAddCustomerVisible, setIsModalAddCustomerVisible] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [keySearch, setKeySearch] = useState('');\n    const [isModalCommentVisible, setIsModalCommentVisible] = useState(false);\n    const [mark, setMark] = useState(1);\n    const isMounted = useRef(false);\n\n\n    useEffect(() => {\n        props.fetchProduct(null, 1, 10);\n        console.log('fetch product');\n    }, [])\n\n    // hanfle search function\n    useEffect(() => {\n        if (isMounted.current) {\n            props.fetchProduct([{\n                field: 'name',\n                value: '%25' + keySearch + '%25',\n                condition_type: 'like',\n                logic: logicType.OR\n            },\n            {\n                field: 'sku',\n                value: '%25' + keySearch + '%25',\n                condition_type: 'like',\n                logic: logicType.OR\n            }\n            ], currentPage, pageSize);\n            // isMounted.current = false;\n        } else {\n            isMounted.current = true\n        }\n    }, [keySearch])\n\n    let total = 0;\n    let total_price = 0;\n\n    const { TextArea } = Input;\n\n    const hide = () => {\n        setVisible(false);\n    };\n\n    const handleVisibleChange = visible => {\n        setVisible(visible);\n    };\n\n    const closeTabDrawer = () => {\n        setTabDrwerVisible(false)\n    }\n\n\n    const { Search } = Input;\n\n\n    const onSearch = (value) => {\n        setKeySearch(value);\n    }\n\n    const onInputChange = (e) => {\n        if (!e.target.value) {\n            setKeySearch('');\n        }\n    }\n\n    const handleModalAddCustomerVisible = (val) => {\n        setIsModalAddCustomerVisible(val);\n    }\n\n    const getTotalItem = () => {\n        let total_item = 0;\n        props.cartProps.products.forEach((value, index) => {\n            total_item += value.qty;\n        });\n        return total_item;\n    }\n\n\n\n    const removeCustomer = () => {\n        props.removeCustomer();\n    }\n\n\n    // remove all item of cart\n    const onHoldCart = () => {\n        props.cartHold();\n    }\n\n    const onAddComment = () => {\n        setIsModalCommentVisible(true);\n    }\n\n    const handleCommentOk = () => {\n        setIsModalCommentVisible(false);\n    }\n\n    const handleCommentCancel = () => {\n        setIsModalCommentVisible(false);\n        let cart_temp = Object.assign({}, props.cartProps);\n        cart_temp.comment = '';\n        props.cartChange(cart_temp);\n    }\n\n    const onChangComment = (e) => {\n        let cart_temp = Object.assign({}, props.cartProps);\n        cart_temp.comment = e.target.value;\n        props.cartChange(cart_temp);\n    }\n\n    const onPlaceorder = () => {\n        const orderPayload = props.posInfo;\n        props.placeorder(props.cartProps, orderPayload);\n    }\n\n    const removeItem = (item) => {\n        // const addToCart = (product) => {\n        //     let cart_temp = Object.assign({}, props.cartProps);\n        //     let isNewItems = true;\n        //     //check if product is exist in current cart\n        //     cart_temp.products.forEach((element, index) => {\n        //         if (!element.item) {\n        //             cart_temp.products[index].qty = 1;\n        //             cart_temp.products[index].item = product;\n        //             isNewItems = false;\n        //         } else if (JSON.stringify(product) === JSON.stringify(element.item)) {\n        //             cart_temp.products[index].qty++;\n        //             isNewItems = false\n        //         }\n    \n        //     });\n    \n        //     if (isNewItems) {\n        //         cart_temp.products.push({\n        //             item: product,\n        //             qty: 1\n        //         });\n        //     }\n    \n        //     // caculate total_price\n        //     cart_temp.total_price += product.price;\n    \n        //     props.cartChange(cart_temp);\n        // }\n\n        let cart_temp = Object.assign({}, props.cartProps);\n        cart_temp.products.forEach((element, index) => {\n            if(element.item.id == item.item.id){\n                \n                if(element.qty > 1){\n                    cart_temp.products[index].qty --;\n                    cart_temp.total_price -= item.item.price;\n                }else{\n                    // this case qty = 1\n                    if(cart_temp.products.length > 1){\n                        cart_temp.products.splice(index, index + 1);\n                        cart_temp.total_price -= item.item.price;\n                    }else{\n                        //cart null\n                        cart_temp.products = [{\n                            qty: 0,\n                            item: null\n                        }]\n                        cart_temp.total_price = 0;\n                    }\n                }\n            }\n        });  \n\n        props.cartChange(cart_temp);\n    }\n\n    return (\n        <div>\n            { (!props.isLoadingOrder && !props.isLoadingCustomer) ? <div><Row className=\"row-header\">\n                <Col span={1} className='align-center col1'>\n                    <a onClick={() => {\n                        setTabDrwerVisible(true);\n                    }}><img id='menu-icon' src=\"icons8-menu-48.png\" alt=\"image\"></img></a>\n                </Col>\n                <Col span={5} className='align-center col2'>\n                    <h2 style={{ margin: + \"15\" }}>Cart</h2>\n                </Col>\n                <Col span={18} className='search-bar col3'>\n                    <Popover\n                        content={<a onClick={() => (hide)}>Close</a>}\n                        title=\"Title\"\n                        trigger=\"click\"\n                        visible={visible}\n                        onVisibleChange={handleVisibleChange}\n                        className='popover-product'\n                    >\n                        <Button>Products</Button>\n                    </Popover>\n                    <Search placeholder=\"input search text\" onSearch={onSearch} onChange={onInputChange} style={{ width: 1000 }} />\n                </Col>\n            </Row>\n\n                <Row className=\"row-content\">\n                    <Col span={1} className='align-center col1'>\n                        <div className='icons-bar'>\n                            <a onClick={onAddComment}>\n                                <img src='icons8-comments.png'></img>\n                            </a>\n                        </div>\n                        <div className='icons-bar'>\n                            <a onClick={onHoldCart}>\n                                <img src='delete-forever.png'></img>\n                            </a>\n                        </div>\n                        <div className='icons-bar'>\n                            <a>\n                                <img src='icons8-create-order-64.png'></img>\n                            </a>\n                        </div>\n                        {props.cartProps.total_price > 0 ? (<div className='icon-cart'>\n                            <a style={{ position: 'relative' }}>\n                                <img src='cart.png'></img>\n                                <p className='cart-item-qty'>{getTotalItem()}</p>\n                            </a>\n                        </div>) : ''}\n                    </Col>\n                    <Col span={5} className='align-center col2 cart-side'>\n                        <div class='customer-side'>\n                            <div class='customer-link-side'>\n                                <a style={{ display: \"flex\", width: '85%' }} onClick={() => { setIsModalAddCustomerVisible(true); }}>\n                                    <img src='icons8-customer.png' alt='customer' id='icon-customer'></img>\n                                    <h2 style={{ width: '80%', margin: 15, textAlign: 'left' }}>{props.chosenCustomer ? (props.chosenCustomer.firstname + ' ' + props.chosenCustomer.lastname) : 'Guest'}</h2>\n\n                                </a>\n                                {props.chosenCustomer ? <a>\n                                    <img onClick={removeCustomer} src='remove.png' style={{ right: '10px', top: '15px', position: 'absolute', width: '20px' }}></img>\n                                </a> : ''}\n                            </div>\n                        </div>\n\n\n                        <div className='cart-content'>\n                            {props.cartProps.products ? props.cartProps.products.map((value, index) => {\n                                if (value.item) {\n                                    return (\n                                        <div className='cart-item-wrapper'>\n                                            <a className='cart-item'>\n                                                <div className='cart-item-image'>\n                                                    <img src={BASE_IMG_URL + value.item.custom_attributes[0].value} />\n                                                    <p className='cart-item-qty'>{value.qty}</p>\n                                                </div>\n                                                <h3 className='cart-item-name'>{value.item.name}</h3>\n                                                <p className='cart-item-price'>${value.item.price * value.qty}</p>\n                                            </a>\n                                            <a>\n                                                <img src='rm.png' className='icon-remove-item' onClick={() => removeItem(value)}></img>\n                                            </a>\n                                        </div>\n\n                                    )\n                                }\n                            }) : ''}\n                        </div>\n\n                        <div className=\"interact-cart\">\n                            <a className='hold-button' onClick={onHoldCart}><h1>Hold</h1></a>\n                            <a className='placeorder-button' onClick={onPlaceorder}><h1>${formatMoney(props.cartProps.total_price)}</h1></a>\n                        </div>\n                    </Col>\n\n                        {/* side for product */}\n                        <Col span={18} className='col3' style={{ backgroundColor: '#f0f0f0' }}>\n                            {(!props.processingPlaceorder && !props.isLoadingProduct) ?\n                                <ListProduct currentPage={currentPage}\n                                    setCurrentPage={setCurrentPage}\n                                    pageSize={pageSize}\n                                    setPageSize={setPageSize}\n                                    products={props.listProduct}\n                                /> : <div style={{ textAlign: 'center', margin: '45vh' }}>\n                                    <Space size='middle'>\n                                        <Spin size='large' />\n                                    </Space>\n                                </div>}\n\n                        </Col>\n                </Row>\n\n                    <TabDrawer visible={tabDrawerVisible} closeTabDrawer={closeTabDrawer} />\n                    <AddCustomer isModalVisible={isModalAddCustomerVisible} setIsModalVisiblle={handleModalAddCustomerVisible} />\n\n                    {/* comment side */}\n                    <Modal title=\"Add comment to this order\" visible={isModalCommentVisible} onOk={handleCommentOk} onCancel={handleCommentCancel}>\n                        <TextArea rows={4} onChange={onChangComment} value={props.cartProps.comment} />\n                    </Modal></div> : <div style={{ textAlign: 'center', margin: '45vh' }}>\n                    <Space size='middle'>\n                        <Spin size='large' />\n                    </Space>\n                </div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    // if (state.product.data) {\n    return {\n                listProduct: state.product.data.items,\n        total_count: state.product.data.total_count,\n        chosenCustomer: state.customer.chosenCustomer,\n        staff: state.staff.staff.staff,\n        cartProps: state.cart,\n        isLoadingProduct: state.product.isLoadingProduct,\n        isLoadingOrder: state.order.isLoadingOrder,\n        isLoadingCustomer: state.customer.isLoadingCustomer,\n        posInfo: state.staff.posInfo,\n        processingPlaceorder: state.cart.processingPlaceorder,\n    }\n    // }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n                fetchProduct: (filter, page, pageSize) => dispatch(fetchProduct(filter, page, pageSize)),\n        removeCustomer: () => dispatch(chooseGuest()),\n        cartChange: (payload) => dispatch(cartUpdate(payload)),\n        cartHold: () => dispatch(holdCart()),\n        placeorder: (cart, orderPayload) => {\n                dispatch(placeorder(cart));\n            dispatch(fetchProduct(null, 1, 10));\n            dispatch(fetchOrder(orderPayload));\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","/home/rogers/simple-pos/src/pages/TabDrawer.jsx",["190","191","192","193","194","195","196"],"import React from 'react';\nimport { Drawer, Button, Empty, List } from 'antd';\nimport { useCookies } from 'react-cookie';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { logout } from '../actions/StaffAction';\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst TabDrawer = (props) => {\n\n  const [cookies, setCookies, removeCookies] = useCookies(['isLogin', 'staff']);\n\n  const history = useHistory();\n\n  const style = {\n    \"background-color\": '#262a41',\n    \"color\": 'white !important'\n  };\n\n  const onClose = () => {\n    props.closeTabDrawer();\n  };\n\n  const data = [\n    'Checkout',\n    'Order History',\n    'On-holds Orders',\n    'Settings',\n    'Logout',\n  ];\n\n  const handleLogout = () => {\n    removeCookies('isLogin', { path: '/' });\n    removeCookies('staff', { path: '/' });\n    props.logout();\n  }\n  return (\n    <div>\n      <Drawer\n        title=\"Simple POS\"\n        width={300}\n        closable={false}\n        onClose={onClose}\n        visible={props.visible}\n        key=\"left\"\n        placement=\"left\"\n        headerStyle={{ color: 'wheat', backgroundColor: '#262a41' }}\n        drawerStyle={style}\n      // footer={<h2>POS enterprise 4.11.9</h2>}\n      >\n        <Link to='/checkout'>\n          <h2 style={{ color: 'wheat' }}>Checkout</h2>\n        </Link>\n        <Link to='/order-history' onClick={() => history.push('/order-history')}>\n          <h2 style={{ color: 'wheat' }}>Order History</h2>\n        </Link>\n        <Link to='/checkout'>\n          <h2 style={{ color: 'wheat' }}>On-holds Orders</h2>\n        </Link>\n        <Link to='/checkout'>\n          <h2 style={{ color: 'wheat' }}>Settings</h2>\n        </Link>\n        <Link onClick={handleLogout}>\n          <h2 style={{ color: 'wheat' }}>Logout</h2>\n        </Link>\n      </Drawer>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logout()),\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(TabDrawer);\n","/home/rogers/simple-pos/src/pages/ModalAddCustomer.jsx",["197","198","199","200","201"],"\nimport React, { useState } from 'react';\nimport { Modal, Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { chooseCustomer } from '../actions/CustomerAction';\n\nconst AddCustomer = (props) => {\n    const { Search } = Input;\n\n    const [keySearch, setKeySearch] = useState('');\n\n    const handleOk = () => {\n        props.setIsModalVisiblle(false);\n    }\n\n    const handeCancle = () => {\n        props.setIsModalVisiblle(false);\n    }\n\n    const onSearch = (value, event) => {\n        setKeySearch(value);\n    }\n\n    const onChange = (e) => {\n        const value = e.target.value;\n        if (value == '')\n            setKeySearch('');\n    }\n\n    const chooseCustomer = (customer) => {\n        props.choooseCustomer(customer);\n        props.setIsModalVisiblle(false);\n    }\n\n    return (\n        <>\n            <Modal\n                visible={props.isModalVisible}\n                onOk={handleOk}\n                onCancel={handeCancle}\n                width={375}\n            >\n                <br />\n                <Search placeholder=\"input search text\" onSearch={onSearch} style={{ marginTop: \"10px\" }} onChange={onChange} />\n                <br />\n                {props.list_customer.map((value, index) => {\n                    if (keySearch) {\n                        if (value.firstname.includes(keySearch) || value.lastname.includes(keySearch)) {\n                            return (\n                                <a onClick={() => chooseCustomer(value)} key={value.id}><p>{value.firstname + ' ' + value.lastname}</p></a>\n                            )\n                        }\n                    } else {\n                        return (\n                            <a onClick={() => chooseCustomer(value)} key={value.id}><p>{value.firstname + ' ' + value.lastname}</p></a>\n                        )\n                    }\n                })}\n            </Modal>\n        </>\n    );\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        list_customer: state.customer.data.items,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        choooseCustomer: (customer) => dispatch(chooseCustomer(customer)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCustomer);","/home/rogers/simple-pos/src/reducers/rootReducer.js",[],"/home/rogers/simple-pos/src/epics/rootEpic.js",["202"],"import { combineEpics } from 'redux-observable';\nimport { staff } from '../reducers/staffReducer';\n\nimport {fetchProductEpic} from './ProductEpic';\nimport {staffLogin} from './StaffEpic';\nimport {fetchOrderEpic, placeorder, fetchAdditionalInfoEpic, fetchAdditionalInfoEpicFulfiled} from './OrderEpic';\nimport {fetchCustomerEpic} from './CustomerEpic';\n\nconst rootEpic = combineEpics(\n    fetchProductEpic,\n    staffLogin,\n    fetchOrderEpic,\n    fetchCustomerEpic,\n    placeorder,\n    fetchAdditionalInfoEpicFulfiled,\n    fetchAdditionalInfoEpic,\n);\n\nexport default rootEpic;","/home/rogers/simple-pos/src/reducers/staffReducer.js",[],"/home/rogers/simple-pos/src/epics/StaffEpic.js",["203","204","205","206","207","208"],"import { ofType } from 'redux-observable';\nimport { map, switchMap, mergeMap } from 'rxjs/operators';\nimport { actionType } from '../constants/index';\nimport { login, loginSuccessfully, loginFail } from '../actions/StaffAction';\nimport { ajax } from \"rxjs/ajax\";\nimport { dispatch } from 'rxjs/internal/observable/pairs';\n\n\nconst staffLogin = (action$, state$) => action$.pipe(\n    ofType(actionType.LOGIN),\n    mergeMap(async action => {\n        let result = {};\n        await fetch(`http://127.0.0.1/magento/rest/V1/api/security/login`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                data:\n                {\n                    email: action.payload.email,\n                    password: action.payload.password\n                }\n            }),\n            mode: \"cors\"\n        }).then(response => response.json())\n            .then(data => { result = data });\n        if (result.code == 200) {\n            return loginSuccessfully(result);\n        } else {\n            return loginFail(result);\n        }\n\n    })\n);\n\n\n\n\nexport {\n    staffLogin,\n}","/home/rogers/simple-pos/src/epics/ProductEpic.js",["209","210","211","212"],"import {ofType} from 'redux-observable';\nimport { map, switchMap, mergeMap } from 'rxjs/operators';\nimport { actionType } from '../constants/index';\nimport { fetchProduct, fetchProductFulfiled } from '../actions/ProductAction';\n\n\nconst fetchProductEpic = (action$, state$) => action$.pipe(\n    ofType(actionType.FETCH_PRODUCT),\n    mergeMap(async action => {\n        let result = {};\n        await fetch(`http://127.0.0.1/magento/rest/V1/api/products/getProduct?`+ action.payload.url, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': state$.value.staff.staff.staff.token,\n                'Id': state$.value.staff.staff.staff.id\n            },\n            mode: \"cors\"\n        }).then(response => response.json())\n            .then(data => { result = data });\n\n        const listId = result.items.map(item => item.id);\n\n        let addtionalInfo = [];\n        await await fetch(`http://127.0.0.1/magento/rest/V1/api/products/getAdditionalInfo`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'id': listId,\n            }),\n            mode: \"cors\"\n        }).then(response => response.json())\n            .then(data => { addtionalInfo = data });\n\n            \n        addtionalInfo.map( (value, index) => {\n            result.items[index].parent_id = value.parent_id;\n            result.items[index].qty = value.qty;\n            result.items[index].currency_symbol = value.currency_symbol;\n            result.items[index].currency_code = value.currency_code;\n\n        })\n        \n        return fetchProductFulfiled(result);\n\n    })\n);\n\n\nexport {\n    fetchProductEpic,\n}","/home/rogers/simple-pos/src/reducers/productReducer.js",[],"/home/rogers/simple-pos/src/constants/index.js",[],"/home/rogers/simple-pos/src/actions/ProductAction.js",["213","214"],"import { actionType } from '../constants/index'\nimport { logicType } from '../constants/index'\n\nconst fetchProduct = (filter = null, currentPage = 0, pageSize = 1000) => {\n    let url = '';\n    let index_and = 0;\n    let index_or = 0;\n\n    \n    if (filter) {\n        url += 'searchCriteria[filter_groups][0][filters][0][field]=entity_id' +\n            '&searchCriteria[filter_groups][0][filters][0][value]=10000' +\n            '&searchCriteria[filter_groups][0][filters][0][condition_type]=neq';\n        if (filter.length > 0) {\n\n            filter.forEach((element, index) => {\n                if (element.logic == logicType.OR) {\n                    index_or++;\n                }\n    \n                if (element.logic == logicType.AND) {\n                    index_and++;\n                }\n\n                url += '&searchCriteria[filter_groups][' + index_and + '][filters][' + index_or + '][field]=' + element.field;\n                url += '&searchCriteria[filter_groups][' + index_and + '][filters][' + index_or + '][value]=' + element.value;\n                url += '&searchCriteria[filter_groups][' + index_and + '][filters][' + index_or + '][condition_type]=' + element.condition_type;\n            });\n        }\n        url += '&searchCriteria[pageSize]=' + pageSize + '&searchCriteria[currentPage]=' + currentPage;\n    }\n\n    else {\n        url = 'searchCriteria[filter_groups][0][filters][0][field]=entity_id' +\n            '&searchCriteria[filter_groups][0][filters][0][value]=10000' +\n            '&searchCriteria[filter_groups][0][filters][0][condition_type]=neq' +\n            '&searchCriteria[pageSize]=' + pageSize + '&searchCriteria[currentPage]=' + currentPage\n    }\n    return {\n        type: actionType.FETCH_PRODUCT,\n        payload: {\n            url: url\n        }\n    }\n}\n\n\nconst fetchProductFulfiled = (payload) => ({\n    type: actionType.FETCH_PRODUCT_FULFILED,\n    payload: payload\n})\n\nexport {\n    fetchProduct,\n    fetchProductFulfiled\n}","/home/rogers/simple-pos/src/actions/StaffAction.js",[],"/home/rogers/simple-pos/src/pages/ChooseLocation.jsx",["215","216"],"import { chooseLocation } from '../actions/StaffAction';\nimport {fetchCustomer} from '../actions/CustomerAction';\nimport {fetchOrder} from '../actions/OrderAction';\nimport {fetchProduct} from '../actions/ProductAction';\nimport { Row, Col } from 'antd';\nimport './css/chooseLocation.css';\n\nconst { connect } = require(\"react-redux\")\n\n\nconst ChooseLocation = (props) => {\n\n    const dispatchChooseLoaction = (payload) => {\n        props.chooseLocation(payload);\n    }\n\n    return (\n        <div>\n            <Row>\n                <Col span={9} >\n                </Col>\n                <Col span={6} >\n                    <div className='pos-wrapper'>\n                        <img src='/icon-login.png' id='icon-magestore' ></img>\n                        {props.staff ? props.staff.list_pos.map(element => {\n                            return (\n                                <a onClick={() => dispatchChooseLoaction(element)} className='posElement'>\n                                    <h1>{element.name}</h1>\n                                </a>\n                            )\n                        }): ''}\n                        <p style={{textAlign: 'center'}}>please choose your location</p>\n                    </div>\n                </Col>\n                <Col span={9} >\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        staff: state.staff.staff,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        chooseLocation: (payload) => {\n            dispatch(chooseLocation(payload));\n            dispatch(fetchProduct(null, 1, 10));\n            dispatch(fetchOrder(payload));\n            dispatch(fetchCustomer());\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseLocation);","/home/rogers/simple-pos/src/actions/CustomerAction.js",[],"/home/rogers/simple-pos/src/actions/OrderAction.js",[],"/home/rogers/simple-pos/src/epics/OrderEpic.js",["217","218","219"],"import { ofType } from 'redux-observable';\nimport { map, switchMap, mergeMap } from 'rxjs/operators';\nimport { actionType } from '../constants/index';\nimport { fetOrderFulfiled, fetchOrder, placeorderFulfiled, fetchAdditionalOrderInfoOk, fetchAdditionalOrderInfo } from '../actions/OrderAction';\n\n\nconst fetchOrderEpic = (action$, state$) => action$.pipe(\n    ofType(actionType.FETCH_ORDER),\n    mergeMap(async action => {\n        let result = {};\n        await fetch(`http://127.0.0.1/magento/rest/V1/api/orders/getOrder/` + action.payload.id, {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': state$.value.staff.staff.staff.token,\n                'Id': state$.value.staff.staff.staff.id\n            },\n            mode: \"cors\"\n        }).then(response => response.json())\n            .then(data => { result = data });\n\n        return fetOrderFulfiled(result);\n\n    })\n);\n\nconst fetchAdditionalInfoEpic = (action$, state$) => action$.pipe(\n    ofType(actionType.FETCH_ORDER_FULFILED),\n    mergeMap(async action => {\n        const list_id = [];\n        action.payload.items.forEach(element => {\n            list_id.push(parseInt(element.entity_id));\n        });\n\n\n        return fetchAdditionalOrderInfo(list_id);\n\n    })\n);\n\n\nconst fetchAdditionalInfoEpicFulfiled = (action$, state$) => action$.pipe(\n    ofType(actionType.ADDITIONAL_ORDER_INFO),\n    mergeMap(async action => {\n        const list_id = action.payload;\n        let result = {};\n        await fetch(`http://127.0.0.1/magento/rest/V1/api/orders/getAdditionalInfo`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                'list_id': list_id\n            }),\n            mode: \"cors\"\n        }).then(response => response.json())\n            .then(data => { result = data });\n\n            debugger\n        \n        return fetchAdditionalOrderInfoOk(result);\n        \n    })\n);\n\n\nconst placeorder = (action$, state$) => action$.pipe(\n    ofType(actionType.PLACEORDER),\n    mergeMap(async (action) => {\n        let result = {};\n        const pos_id = state$.value.staff.posInfo.id;\n        let bodyData = getOrderInfo(action.payload, pos_id);\n        debugger\n        await fetch(`http://127.0.0.1/magento/rest/V1/api/orders/createOrder`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            mode: \"cors\",\n            body: JSON.stringify(bodyData)\n        }).then(response => response.json())\n            .then(data => { result = data });\n\n        // return fetchOrder({\n        //     id: pos_id\n        // });\n\n        console.log(result);\n\n        return placeorderFulfiled();\n\n    })\n);\n\n\nconst getOrderInfo = (cart, pos_id) => {\n    let initial_result = {\n        \"data\": {\n            \"currency_id\": \"USD\",\n            \"email\": \"rogers@trueplus.vn\",\n            \"shipping_address\": {\n                \"firstname\": \"jhon\",\n                \"lastname\": \"Deo\",\n                \"street\": \"xxxx\",\n                \"city\": \"xxxxx\",\n                \"country_id\": \"US\",\n                \"region\": \"Idaho\",\n                \"postcode\": \"43244\",\n                \"region_id\": \"1\",\n                \"telephone\": \"52332\",\n                \"fax\": \"32423\",\n                \"save_in_address_book\": 1\n            },\n            \"items\": [\n                {\n                    \"product_id\": \"4\",\n                    \"qty\": 1,\n                    \"price\": 34\n                }\n            ]\n        },\n        \"pos_id\": pos_id\n    }\n\n    cart.products.forEach(element => {\n        initial_result.data.items.push({\n            \"product_id\": element.item.id,\n            \"qty\": element.qty,\n            \"price\": element.item.price * element.qty\n        });\n\n    });\n\n    if (cart.customer) {\n        initial_result.data.email = cart.customer.email;\n        initial_result.data.shipping_address.firstname = cart.customer.firstname;\n        initial_result.data.shipping_address.lastname = cart.customer.lastname;\n        if (cart.customer.addresses.length > 0) {\n            // address = cart.customer.addresses[0];\n            initial_result = {\n                ...initial_result,\n                shipping_address: {\n                    \"firstname\": cart.customer.firstname,\n                    \"lastname\": cart.customer.lastname,\n                    \"street\": cart.customer.addresses[0].street[0],\n                    \"city\": cart.customer.addresses[0].city,\n                    \"country_id\": cart.customer.addresses[0].country_id,\n                    \"region\": cart.customer.addresses[0].region,\n                    \"postcode\": cart.customer.addresses[0].postcode,\n                    \"region_id\": cart.customer.addresses[0].region_id,\n                    \"telephone\": cart.customer.addresses[0].telephone,\n                    \"fax\": \"32423\",\n                    \"save_in_address_book\": 1\n                }\n            }\n        }\n    }\n\n    return initial_result;\n}\n\nexport {\n    fetchOrderEpic,\n    placeorder,\n    fetchAdditionalInfoEpic,\n    fetchAdditionalInfoEpicFulfiled\n}",["220","221"],"/home/rogers/simple-pos/src/epics/CustomerEpic.js",["222","223","224"],"import { ofType } from 'redux-observable';\nimport { map, switchMap, mergeMap } from 'rxjs/operators';\nimport { actionType } from '../constants/index';\nimport { fetchCustomer, fetchCustomerFulfiled } from '../actions/CustomerAction';\n\n\nconst fetchCustomerEpic = (action$, state$) => action$.pipe(\n    ofType(actionType.FETCH_CUSTOMER),\n    mergeMap(async action => {\n        let result = {};\n        await fetch(`http://127.0.0.1/magento/rest/V1/api/customers/getCustomer`, {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': state$.value.staff.staff.staff.token,\n                'Id': state$.value.staff.staff.staff.id\n            }   \n        }).then(response => response.json())\n            .then(data => { result = data });\n        return fetchCustomerFulfiled(result);\n\n    })\n);\n\n\nexport {\n    fetchCustomerEpic,\n}","/home/rogers/simple-pos/src/reducers/customerReducer.js",[],"/home/rogers/simple-pos/src/reducers/orderReducers.js",["225"],"\nimport { act } from 'react-dom/test-utils'\nimport { actionType } from '../constants/index'\n\n\nconst INITIAL_STATE = {\n    order: {},\n    isLoadingOrder:false,\n    data: {\n        items: [],\n        search_criteria:{\n            filter_groups:[],\n        },\n        total_count: 0\n    },\n    additional_info: null\n}\n\n\nconst order = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case actionType.FETCH_ORDER:\n            return {\n                ...state,\n                isLoadingOrder: true\n            }\n\n        case actionType.FETCH_ORDER_FULFILED:\n            return {\n                ...state,\n                isLoadingOrder: false,\n                data: action.payload\n            }\n\n        case actionType.ADDITIONAL_ORDER_INFO_OK:\n            return {\n                ...state,\n                additional_info: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport {\n    order,\n}","/home/rogers/simple-pos/src/helper/index.js",[],"/home/rogers/simple-pos/src/actions/CartAction.js",[],"/home/rogers/simple-pos/src/reducers/cartReducer.js",[],"/home/rogers/simple-pos/src/pages/ListProduct.jsx",["226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"import { Pagination, Modal } from \"antd\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { cartUpdate, holdCart } from \"../actions/CartAction\";\nimport { chooseGuest, fetchCustomerFulfiled } from \"../actions/CustomerAction\";\nimport { fetchOrder, placeorder } from \"../actions/OrderAction\";\nimport { fetchProduct } from \"../actions/ProductAction\";\nimport { BASE_IMG_URL } from \"../constants\";\nimport './css/listProduct.css';\n\nconst INITIAL_CHIDREN_PRODUCT = {\n\n}\n\nconst ListProduct = (props) => {\n\n    let total = 0;\n\n    const [childProductVisible, setChildProductVisible] = useState(false);\n    const [chidrenProduct, setChidrenProduct] = useState([]);\n\n    const addToCart = (product) => {\n        let cart_temp = Object.assign({}, props.cartProps);\n        let isNewItems = true;\n        //check if product is exist in current cart\n        cart_temp.products.forEach((element, index) => {\n            if (!element.item) {\n                cart_temp.products[index].qty = 1;\n                cart_temp.products[index].item = product;\n                isNewItems = false;\n            } else if (JSON.stringify(product) === JSON.stringify(element.item)) {\n                cart_temp.products[index].qty++;\n                isNewItems = false\n            }\n\n        });\n\n        if (isNewItems) {\n            cart_temp.products.push({\n                item: product,\n                qty: 1\n            });\n        }\n\n        // caculate total_price\n        cart_temp.total_price += product.price;\n\n        props.cartChange(cart_temp);\n    }\n\n    const showTotal = () => {\n        return `Total ${total} items`\n    }\n\n    const handlePagination = (page, size) => {\n        props.setCurrentPage(page);\n        props.setPageSize(size);\n        props.fetchProduct(null, page, size);\n    }\n\n    const onShowSizeChange = (current, size) => {\n        props.setPageSize(size);\n    }\n\n    const showChildProduct = (listProduct) => {\n        setChildProductVisible(true);\n        setChidrenProduct(listProduct);\n    }\n\n    const onOk = () => {\n        setChildProductVisible(false);\n    }\n\n    const onCancel = () => {\n        setChildProductVisible(false);\n    }\n\n    return (\n        <div>\n            <ul style={{ listStyleType: 'none', display: 'flex', flexWrap: 'wrap', paddingLeft: '10px' }}>\n                {props.products.map((value, index) => {\n                    if (value.type_id == 'simple' && value.qty > 0 && value.id == value.parent_id) {\n                        total++;\n                        return (\n                            <li className='product-item'>\n                                <a onClick={() => addToCart(value)}>\n                                    <img className='thumnail-image-product' src={BASE_IMG_URL + value.custom_attributes[0].value} ></img>\n                                    <div>\n                                        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                                            <h3 style={{ width: '75%', paddingLeft: '10px' }}>{value.name} </h3>\n                                            <h3 style={{ width: '25%' }}>{value.qty}</h3>\n                                        </div>\n                                        <div style={{ display: 'flex' }}>\n                                            <h3 style={{ width: + 75 + '%', paddingLeft: '10px' }}>{value.sku}</h3>\n                                            <h3 style={{ width: + 20 + '%' }}>{value.price} $</h3>\n                                        </div>\n                                    </div>\n                                </a>\n                            </li>\n                        )\n                    } else if (value.type_id == \"configurable\") {\n                        total++;\n                        const listProduct = props.products.filter((item, i) => {\n                            if (item.parent_id == value.id) {\n                                return item;\n                            }\n                        });\n                        return (\n                            <li className='product-item'>\n                                <a onClick={() => showChildProduct(listProduct)}>\n                                    <img className='thumnail-image-product' src={BASE_IMG_URL + value.custom_attributes[0].value} ></img>\n                                    <div>\n                                        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                                            <h3 style={{ width: '75%', paddingLeft: '10px' }}>{value.name} </h3>\n                                            <h3 style={{ width: '25%' }}>available</h3>\n                                        </div>\n                                        <div style={{ display: 'flex' }}>\n                                            <h3 style={{ width: + 75 + '%', paddingLeft: '10px' }}>{value.sku}</h3>\n                                            <h3 style={{ width: + 20 + '%' }}>configure</h3>\n                                        </div>\n                                    </div>\n                                </a>\n                            </li>\n                        )\n                    }\n\n                    \n\n                })}\n                <Modal\n                        visible={childProductVisible}\n                        onOk={onOk}\n                        onCancel={onCancel}\n                        title='list product'\n                        centered\n                        style={{ height: 'calc(50%)'    }}\n                        bodyStyle={{backgroundColor: '#f8f8f8', overflow: 'scroll'}}\n                    >\n                        {chidrenProduct ? chidrenProduct.map((value, index) => (\n                            <a onClick={() => addToCart(value)} className=\"wrapper-child-item\">\n                                <img className='thumnail-child-image' src={BASE_IMG_URL+ value.custom_attributes[0].value}></img>\n                                <div><h3>{value.name}</h3></div>\n                                <div>\n                                    <h3>{value.price}</h3>\n                                    <h3>{value.qty}</h3>\n                                </div>\n                            </a>\n                        )) : ''}\n                    </Modal>\n            </ul>\n            <Pagination\n                total={props.total_count}\n                showSizeChanger\n                showQuickJumper\n                showTotal={showTotal}\n                onChange={handlePagination}\n                current={props.currentPage}\n                onShowSizeChange={onShowSizeChange}\n                pageSize={props.pageSize}\n            />\n            {/* <Link to=\"/order-hostory\">Home</Link> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    // if (state.product.data) {\n    return {\n        listProduct: state.product.data.items,\n        total_count: state.product.data.total_count,\n        chosenCustomer: state.customer.chosenCustomer,\n        staff: state.staff.staff.staff,\n        cartProps: state.cart,\n        isLoadingProduct: state.product.isLoadingProduct,\n        isLoadingOrder: state.order.isLoadingOrder,\n        isLoadingCustomer: state.customer.isLoadingCustomer,\n        posInfo: state.staff.posInfo,\n        processingPlaceorder: state.cart.processingPlaceorder,\n    }\n    // }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        fetchProduct: (filter, page, pageSize) => dispatch(fetchProduct(filter, page, pageSize)),\n        removeCustomer: () => dispatch(chooseGuest()),\n        cartChange: (payload) => dispatch(cartUpdate(payload)),\n        cartHold: () => dispatch(holdCart()),\n        placeorder: (cart, orderPayload) => {\n            dispatch(placeorder(cart));\n            dispatch(fetchProduct(null, 1, 10));\n            dispatch(fetchOrder(orderPayload));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListProduct);","/home/rogers/simple-pos/src/pages/OrderHistory.jsx",["243","244","245","246","247","248","249","250","251"],"import { Col, Row } from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport './css/order.css';\nimport OrderDetail from \"./OrderDetail\";\nimport TabDrawer from \"./TabDrawer\";\n\nconst OrderHistory = (props) => {\n    const [listOrderWithDate, setListOrderWithDate] = useState(undefined);\n    const [chosenOrder, setChosenOrder] = useState();\n    const [tabDrawerVisible, setTabDrwerVisible] = useState(false);\n    const [textSearch, setTextSearch] = useState('');\n    useEffect(() => {\n        const lsOrder = sortOrderByDate(props.orders);\n        setListOrderWithDate(lsOrder);\n    }, [props.orders])\n\n\n    const sortOrderByDate = (orders) => {\n        let result = [{\n            item: [\n\n            ],\n            date: ''\n        }]\n        orders.data.items.forEach((value, index) => {\n            if (index == 0) {\n                // result[0].item = []\n                result[0].item.push(value);\n                result[0].date = convertStringToDate(value.created_at);\n            } else {\n                let flag = false;\n                result.forEach((e, i) => {\n                    if (e.date.getTime() == convertStringToDate(value.created_at).getTime()) {\n                        result[i].item.push(value);\n                        flag = true;\n                    }\n                })\n\n                if (!flag) {\n                    const item = {\n                        item: [\n                            value\n                        ],\n                        date: convertStringToDate(value.created_at)\n                    }\n                    result.push(item);\n                }\n            }\n        });\n        result.reverse();\n        return result;\n    }\n\n    const convertStringToDate = (dateString) => {\n        const ymd = dateString.split(' ')[0];\n        const arrayDate = ymd.split('-');\n        return new Date(arrayDate[0], arrayDate[1] - 1, arrayDate[2]);\n    }\n\n\n    const onSearch = (value) => {\n        setTextSearch(value);\n    }\n\n    const onInputChange = (e) => {\n        if (!e.target.value) {\n            setTextSearch('');\n        }\n    }\n\n    const handleClickOrderItem = (item) => {\n        document.getElementById('title').innerHTML = item.entity_id;\n\n        setChosenOrder(item);\n    }\n\n    const closeTabDrawer = () => {\n        setTabDrwerVisible(false);\n    }\n    return (\n        <div>\n            <Row className='row1'>\n                <Col span={7} className='row1-col1'>\n                    <a onClick={() => { setTabDrwerVisible(true) }}><img src='icons8-menu-48.png'></img></a>\n                    <span>\n                        Orders\n                </span>\n                </Col>\n                <Col span={17} className='row1-col2'>\n                    <div>\n                        <h2 id='title'></h2>\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={7} className='row2-col1'>\n                    <div>\n                        <Search placeholder=\"input search text\" onSearch={onSearch} onChange={onInputChange} />\n                    </div>\n                    <ul style={{ padding: '0px 0px' }}>\n                        {listOrderWithDate ? listOrderWithDate.map((value, index) => {\n\n                            let flag = false;\n                            value.item.forEach((e, i) => {\n                                let fullname = '';\n                                if (e.customer_firstname)\n                                    fullname += ' ' + e.customer_firstname;\n                                if (e.customer_middlename)\n                                    fullname += ' ' + e.customer_middlename;\n                                if (e.customer_lastname)\n                                    fullname += ' ' + e.customer_lastname;\n                                    \n                                if (e.customer_email.toLowerCase().includes(textSearch.toLowerCase()) || fullname.toLowerCase().includes(textSearch.toLowerCase())) {\n                                    flag = true;\n                                }\n                            })\n                            if (flag) {\n                                return (\n                                    <div style={{ textAlign: 'center' }}>\n                                        <div style={{ backgroundColor: '#ced0d6' }}>\n                                            <span >{value.date.getDate() + '/' + value.date.getMonth() + 1 + '/' + value.date.getFullYear()}</span>\n                                        </div>\n                                        {value.item.map((e, i) => {\n                                            let fullname = '';\n                                            if (e.customer_firstname)\n                                                fullname += ' ' + e.customer_firstname;\n                                            if (e.customer_middlename)\n                                                fullname += ' ' + e.customer_middlename;\n                                            if (e.customer_lastname)\n                                                fullname += ' ' + e.customer_lastname;\n\n\n\n                                            console.log(fullname);\n                                            if (e.customer_email.toLowerCase().includes(textSearch.toLowerCase()) || fullname.toLowerCase().includes(textSearch.toLowerCase())) {\n                                                flag = true;\n                                            }\n                                            if (flag) {\n                                                return (\n                                                    <a onClick={() => handleClickOrderItem(e)} className='wrapper-order-item'>\n                                                        <div>\n                                                            <h3>{e.entity_id}</h3>\n                                                            <p>{e.state}</p>\n                                                        </div>\n                                                        <div>\n                                                            <h3>${e.grand_total}</h3>\n                                                            <p>{e.status}</p>\n                                                        </div>\n                                                    </a>\n                                                )\n                                            }\n                                        })}\n                                    </div>\n                                )\n                            }\n                        }) : ''}\n                    </ul>\n                </Col>\n                <Col span={17} className='row2-col2'>\n                    <OrderDetail item={chosenOrder} />\n                </Col>\n            </Row>\n\n            <TabDrawer visible={tabDrawerVisible} closeTabDrawer={closeTabDrawer} />\n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        orders: state.order,\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderHistory);","/home/rogers/simple-pos/src/pages/OrderDetail.jsx",["252","253"],"import { Empty } from \"antd\";\nimport { connect } from \"react-redux\"\nimport './css/orderDetail.css';\n\nconst OrderDetail = (props) => {\n\n    const isEmpty = (map) => {\n        for (var key in map) {\n            if (map.hasOwnProperty(key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    const convertStringToDate = (dateString) => {\n        const ymd = dateString.split(' ')[0];\n        const arrayDate = ymd.split('-');\n        return new Date(arrayDate[0], arrayDate[1] - 1, arrayDate[2]);\n    }\n\n    // const getCustomerName()\n\n    const date = props.item ? convertStringToDate(props.item.created_at) : null;\n    return (\n        <div style={{ backgroundColor: 'rgb(241, 241, 241);' }}>\n            {props.item ? <div>\n                <h1>${props.item.grand_total}</h1>\n                <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    <div className='customer-staff' style={{ width: '45%', backgroundColor: '#ededed' }}>\n                        <h3>Order Date: {date.getDate() + '/' + date.getMonth() + 1 + '/' + date.getFullYear() + ' ' + date.getHours() + ':' + date.getMinutes()}</h3>\n                        <h3>Location: {props.posInfo.name}</h3>\n                        <h3>Customer: {props.item.customer_firstname + ' ' + props.item.customer_lastname}</h3>\n                        <h3>Staff: firstname lastname</h3>\n                        <div style={{ display: 'inline-flex', justifyContent: 'space-around' }}>\n                            <h3 id='state-item'>{props.item.state}</h3>\n                            <h3 id='status-item'>{props.item.status}</h3>\n                        </div>\n                    </div>\n\n                    <div className='price-side' style={{ width: '45%', backgroundColor: '#ededed' }}>\n                        <div className='nothing'>\n                            <h3>Subtotal</h3>\n                            <h3>${props.item.subtotal}</h3>\n                        </div>\n                        <div className='nothing'>\n                            <h3>Discount</h3>\n                            <h3>${props.item.discount_amount}</h3>\n                        </div>\n                        <div className='nothing'>\n                            <h3>Shipping</h3>\n                            <h3>${props.item.shipping_amount}</h3>\n                        </div>\n                        <div className='nothing'>\n                            <h3>\n                                Grand Total\n                            </h3>\n                            <h3>{props.item.grand_total}</h3>\n                        </div>\n                        <div className='nothing'>\n                            <h3>Total Paid</h3>\n                            <h3>{props.item.grand_total}</h3>\n\n                        </div>\n                    </div>\n                </div>\n\n                <br></br>\n\n                <div className='list-item-ordered-side'>\n                    <div className='line-under'>\n                        <h3 id='items-orderd'>Items Ordered</h3>\n                    </div>\n\n                    <div>\n                        <h3></h3>\n                    </div>\n                </div>\n\n\n\n                <div className='wrapper-pay-ship'>\n                    <div className='payment-method'>\n                        <div className='line-under'>\n                            <h3>Payment Method</h3>\n                        </div>\n                        <div>\n                            <div>\n                                <h3>Cash</h3>\n                                <p>{date.getDate() + '/' + date.getMonth() + 1 + '/' + date.getFullYear()}</p>\n                            </div>\n                            <div>\n                                <h3>{props.item.status}</h3>\n                                <h3>{props.item.grand_total}</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='shipping-method'>\n                        <div className='line-under'>\n                            <h3>Shipping Method</h3>\n                        </div>\n                        <div>\n                            <h3>Pickup-at-store</h3>\n                            <h3>${props.item.shipping_amount}</h3>\n                        </div>\n                    </div>\n                </div>\n\n                <br></br>\n\n                <div className=\"wrapper-ship-bill\">\n                    <div className='shipping-address'>\n                        <div>\n                            <h3>Shipping Address</h3>\n                        </div>\n                        <div>\n                            <h3>Guest POS</h3>\n                            <h3>N/A, N/A, N/A, 00000, US</h3>\n                        </div>\n                    </div>\n                    <div className='billing-address'>\n                        <div>\n                            <h3>Billing Address</h3>\n                        </div>\n                        <div>\n                            <h3>Guest POS</h3>\n                            <h3>N/A, N/A, N/A, 00000, US</h3>\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n            </div> : <Empty style={{ marginTop: '40vh' }} />}\n        </div>\n    )\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        posInfo: state.staff.posInfo,\n        customer: state.customer,\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetail);",{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":10,"column":37,"nodeType":"260","messageId":"261","endLine":10,"endColumn":41},{"ruleId":"258","severity":1,"message":"262","line":10,"column":43,"nodeType":"260","messageId":"261","endLine":10,"endColumn":49},{"ruleId":"258","severity":1,"message":"263","line":14,"column":31,"nodeType":"260","messageId":"261","endLine":14,"endColumn":44},{"ruleId":"264","severity":1,"message":"265","line":25,"column":6,"nodeType":"266","endLine":25,"endColumn":34,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":29,"column":25,"nodeType":"270","messageId":"271","endLine":29,"endColumn":27},{"ruleId":"258","severity":1,"message":"272","line":1,"column":10,"nodeType":"260","messageId":"261","endLine":1,"endColumn":14},{"ruleId":"258","severity":1,"message":"273","line":9,"column":12,"nodeType":"260","messageId":"261","endLine":9,"endColumn":19},{"ruleId":"258","severity":1,"message":"274","line":9,"column":21,"nodeType":"260","messageId":"261","endLine":9,"endColumn":31},{"ruleId":"258","severity":1,"message":"263","line":9,"column":33,"nodeType":"260","messageId":"261","endLine":9,"endColumn":46},{"ruleId":"258","severity":1,"message":"275","line":11,"column":12,"nodeType":"260","messageId":"261","endLine":11,"endColumn":17},{"ruleId":"258","severity":1,"message":"276","line":12,"column":12,"nodeType":"260","messageId":"261","endLine":12,"endColumn":20},{"ruleId":"277","severity":1,"message":"278","line":78,"column":17,"nodeType":"279","endLine":78,"endColumn":88},{"ruleId":"258","severity":1,"message":"280","line":1,"column":44,"nodeType":"260","messageId":"261","endLine":1,"endColumn":54},{"ruleId":"258","severity":1,"message":"281","line":7,"column":10,"nodeType":"260","messageId":"261","endLine":7,"endColumn":18},{"ruleId":"258","severity":1,"message":"282","line":9,"column":10,"nodeType":"260","messageId":"261","endLine":9,"endColumn":15},{"ruleId":"258","severity":1,"message":"283","line":11,"column":10,"nodeType":"260","messageId":"261","endLine":11,"endColumn":19},{"ruleId":"258","severity":1,"message":"284","line":16,"column":10,"nodeType":"260","messageId":"261","endLine":16,"endColumn":20},{"ruleId":"258","severity":1,"message":"285","line":19,"column":11,"nodeType":"260","messageId":"261","endLine":19,"endColumn":22},{"ruleId":"264","severity":1,"message":"286","line":46,"column":8,"nodeType":"266","endLine":46,"endColumn":30,"suggestions":"287"},{"ruleId":"258","severity":1,"message":"288","line":51,"column":12,"nodeType":"260","messageId":"261","endLine":51,"endColumn":27},{"ruleId":"258","severity":1,"message":"289","line":51,"column":29,"nodeType":"260","messageId":"261","endLine":51,"endColumn":47},{"ruleId":"258","severity":1,"message":"290","line":58,"column":12,"nodeType":"260","messageId":"261","endLine":58,"endColumn":16},{"ruleId":"264","severity":1,"message":"286","line":65,"column":8,"nodeType":"266","endLine":65,"endColumn":10,"suggestions":"291"},{"ruleId":"264","severity":1,"message":"292","line":87,"column":8,"nodeType":"266","endLine":87,"endColumn":19,"suggestions":"293"},{"ruleId":"258","severity":1,"message":"294","line":89,"column":9,"nodeType":"260","messageId":"261","endLine":89,"endColumn":14},{"ruleId":"258","severity":1,"message":"295","line":90,"column":9,"nodeType":"260","messageId":"261","endLine":90,"endColumn":20},{"ruleId":"268","severity":1,"message":"269","line":202,"column":32,"nodeType":"270","messageId":"271","endLine":202,"endColumn":34},{"ruleId":"296","severity":1,"message":"297","line":231,"column":21,"nodeType":"279","endLine":233,"endColumn":24},{"ruleId":"298","severity":1,"message":"299","line":233,"column":24,"nodeType":"279","endLine":233,"endColumn":81},{"ruleId":"296","severity":1,"message":"297","line":240,"column":34,"nodeType":"279","endLine":240,"endColumn":60},{"ruleId":"296","severity":1,"message":"297","line":256,"column":29,"nodeType":"279","endLine":256,"endColumn":55},{"ruleId":"277","severity":1,"message":"278","line":257,"column":33,"nodeType":"279","endLine":257,"endColumn":64},{"ruleId":"296","severity":1,"message":"297","line":261,"column":29,"nodeType":"279","endLine":261,"endColumn":53},{"ruleId":"277","severity":1,"message":"278","line":262,"column":33,"nodeType":"279","endLine":262,"endColumn":63},{"ruleId":"296","severity":1,"message":"297","line":266,"column":29,"nodeType":"279","endLine":266,"endColumn":32},{"ruleId":"277","severity":1,"message":"278","line":267,"column":33,"nodeType":"279","endLine":267,"endColumn":71},{"ruleId":"296","severity":1,"message":"297","line":271,"column":29,"nodeType":"279","endLine":271,"endColumn":65},{"ruleId":"277","severity":1,"message":"278","line":272,"column":33,"nodeType":"279","endLine":272,"endColumn":53},{"ruleId":"296","severity":1,"message":"297","line":280,"column":33,"nodeType":"279","endLine":280,"endColumn":134},{"ruleId":"296","severity":1,"message":"297","line":285,"column":57,"nodeType":"279","endLine":285,"endColumn":60},{"ruleId":"277","severity":1,"message":"278","line":286,"column":37,"nodeType":"279","endLine":286,"endColumn":160},{"ruleId":"300","severity":1,"message":"301","line":293,"column":101,"nodeType":"302","messageId":"303","endLine":293,"endColumn":103},{"ruleId":"296","severity":1,"message":"297","line":297,"column":45,"nodeType":"279","endLine":297,"endColumn":70},{"ruleId":"277","severity":1,"message":"278","line":299,"column":53,"nodeType":"279","endLine":299,"endColumn":119},{"ruleId":"296","severity":1,"message":"297","line":305,"column":45,"nodeType":"279","endLine":305,"endColumn":48},{"ruleId":"277","severity":1,"message":"278","line":306,"column":49,"nodeType":"279","endLine":306,"endColumn":130},{"ruleId":"296","severity":1,"message":"297","line":316,"column":29,"nodeType":"279","endLine":316,"endColumn":77},{"ruleId":"296","severity":1,"message":"297","line":317,"column":29,"nodeType":"279","endLine":317,"endColumn":85},{"ruleId":"258","severity":1,"message":"304","line":2,"column":18,"nodeType":"260","messageId":"261","endLine":2,"endColumn":24},{"ruleId":"258","severity":1,"message":"305","line":2,"column":26,"nodeType":"260","messageId":"261","endLine":2,"endColumn":31},{"ruleId":"258","severity":1,"message":"306","line":2,"column":33,"nodeType":"260","messageId":"261","endLine":2,"endColumn":37},{"ruleId":"258","severity":1,"message":"281","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":18},{"ruleId":"258","severity":1,"message":"273","line":11,"column":10,"nodeType":"260","messageId":"261","endLine":11,"endColumn":17},{"ruleId":"258","severity":1,"message":"274","line":11,"column":19,"nodeType":"260","messageId":"261","endLine":11,"endColumn":29},{"ruleId":"258","severity":1,"message":"307","line":24,"column":9,"nodeType":"260","messageId":"261","endLine":24,"endColumn":13},{"ruleId":"258","severity":1,"message":"304","line":3,"column":17,"nodeType":"260","messageId":"261","endLine":3,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":26,"column":19,"nodeType":"270","messageId":"271","endLine":26,"endColumn":21},{"ruleId":"300","severity":1,"message":"301","line":46,"column":57,"nodeType":"302","messageId":"303","endLine":46,"endColumn":59},{"ruleId":"296","severity":1,"message":"297","line":50,"column":33,"nodeType":"279","endLine":50,"endColumn":89},{"ruleId":"296","severity":1,"message":"297","line":55,"column":29,"nodeType":"279","endLine":55,"endColumn":85},{"ruleId":"258","severity":1,"message":"308","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":15},{"ruleId":"258","severity":1,"message":"309","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":13},{"ruleId":"258","severity":1,"message":"310","line":2,"column":15,"nodeType":"260","messageId":"261","endLine":2,"endColumn":24},{"ruleId":"258","severity":1,"message":"311","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":15},{"ruleId":"258","severity":1,"message":"312","line":5,"column":10,"nodeType":"260","messageId":"261","endLine":5,"endColumn":14},{"ruleId":"258","severity":1,"message":"281","line":6,"column":10,"nodeType":"260","messageId":"261","endLine":6,"endColumn":18},{"ruleId":"268","severity":1,"message":"269","line":29,"column":25,"nodeType":"270","messageId":"271","endLine":29,"endColumn":27},{"ruleId":"258","severity":1,"message":"309","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":13},{"ruleId":"258","severity":1,"message":"310","line":2,"column":15,"nodeType":"260","messageId":"261","endLine":2,"endColumn":24},{"ruleId":"258","severity":1,"message":"313","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":22},{"ruleId":"300","severity":1,"message":"314","line":39,"column":43,"nodeType":"302","messageId":"315","endLine":39,"endColumn":45},{"ruleId":"268","severity":1,"message":"269","line":17,"column":35,"nodeType":"270","messageId":"271","endLine":17,"endColumn":37},{"ruleId":"268","severity":1,"message":"269","line":21,"column":35,"nodeType":"270","messageId":"271","endLine":21,"endColumn":37},{"ruleId":"277","severity":1,"message":"278","line":24,"column":25,"nodeType":"279","endLine":24,"endColumn":73},{"ruleId":"296","severity":1,"message":"297","line":27,"column":33,"nodeType":"279","endLine":27,"endColumn":107},{"ruleId":"258","severity":1,"message":"309","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":13},{"ruleId":"258","severity":1,"message":"310","line":2,"column":15,"nodeType":"260","messageId":"261","endLine":2,"endColumn":24},{"ruleId":"258","severity":1,"message":"316","line":4,"column":28,"nodeType":"260","messageId":"261","endLine":4,"endColumn":38},{"ruleId":"254","replacedBy":"317"},{"ruleId":"256","replacedBy":"318"},{"ruleId":"258","severity":1,"message":"309","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":13},{"ruleId":"258","severity":1,"message":"310","line":2,"column":15,"nodeType":"260","messageId":"261","endLine":2,"endColumn":24},{"ruleId":"258","severity":1,"message":"319","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":23},{"ruleId":"258","severity":1,"message":"320","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":13},{"ruleId":"258","severity":1,"message":"321","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":19},{"ruleId":"258","severity":1,"message":"322","line":2,"column":21,"nodeType":"260","messageId":"261","endLine":2,"endColumn":27},{"ruleId":"258","severity":1,"message":"259","line":4,"column":10,"nodeType":"260","messageId":"261","endLine":4,"endColumn":14},{"ruleId":"258","severity":1,"message":"323","line":6,"column":23,"nodeType":"260","messageId":"261","endLine":6,"endColumn":44},{"ruleId":"258","severity":1,"message":"324","line":12,"column":7,"nodeType":"260","messageId":"261","endLine":12,"endColumn":30},{"ruleId":"300","severity":1,"message":"301","line":82,"column":52,"nodeType":"302","messageId":"303","endLine":82,"endColumn":54},{"ruleId":"268","severity":1,"message":"269","line":83,"column":39,"nodeType":"270","messageId":"271","endLine":83,"endColumn":41},{"ruleId":"268","severity":1,"message":"269","line":83,"column":80,"nodeType":"270","messageId":"271","endLine":83,"endColumn":82},{"ruleId":"296","severity":1,"message":"297","line":87,"column":33,"nodeType":"279","endLine":87,"endColumn":69},{"ruleId":"277","severity":1,"message":"278","line":88,"column":37,"nodeType":"279","endLine":88,"endColumn":132},{"ruleId":"268","severity":1,"message":"269","line":102,"column":46,"nodeType":"270","messageId":"271","endLine":102,"endColumn":48},{"ruleId":"300","severity":1,"message":"325","line":104,"column":77,"nodeType":"302","messageId":"303","endLine":104,"endColumn":79},{"ruleId":"268","severity":1,"message":"269","line":105,"column":48,"nodeType":"270","messageId":"271","endLine":105,"endColumn":50},{"ruleId":"296","severity":1,"message":"297","line":111,"column":33,"nodeType":"279","endLine":111,"endColumn":82},{"ruleId":"277","severity":1,"message":"278","line":112,"column":37,"nodeType":"279","endLine":112,"endColumn":132},{"ruleId":"296","severity":1,"message":"297","line":141,"column":29,"nodeType":"279","endLine":141,"endColumn":96},{"ruleId":"277","severity":1,"message":"278","line":142,"column":33,"nodeType":"279","endLine":142,"endColumn":124},{"ruleId":"264","severity":1,"message":"326","line":17,"column":8,"nodeType":"266","endLine":17,"endColumn":22,"suggestions":"327"},{"ruleId":"268","severity":1,"message":"269","line":28,"column":23,"nodeType":"270","messageId":"271","endLine":28,"endColumn":25},{"ruleId":"268","severity":1,"message":"269","line":35,"column":42,"nodeType":"270","messageId":"271","endLine":35,"endColumn":44},{"ruleId":"296","severity":1,"message":"297","line":86,"column":21,"nodeType":"279","endLine":86,"endColumn":69},{"ruleId":"277","severity":1,"message":"278","line":86,"column":69,"nodeType":"279","endLine":86,"endColumn":99},{"ruleId":"328","severity":1,"message":"329","line":93,"column":25,"nodeType":"279","endLine":93,"endColumn":40},{"ruleId":"300","severity":1,"message":"301","line":103,"column":83,"nodeType":"302","messageId":"303","endLine":103,"endColumn":85},{"ruleId":"300","severity":1,"message":"301","line":125,"column":64,"nodeType":"302","messageId":"303","endLine":125,"endColumn":66},{"ruleId":"296","severity":1,"message":"297","line":142,"column":53,"nodeType":"279","endLine":142,"endColumn":127},{"ruleId":"258","severity":1,"message":"330","line":7,"column":11,"nodeType":"260","messageId":"261","endLine":7,"endColumn":18},{"ruleId":"328","severity":1,"message":"329","line":76,"column":25,"nodeType":"279","endLine":76,"endColumn":29},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'removeCookies' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCookies'. Either include it or remove the dependency array.","ArrayExpression",["333"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Grid' is defined but never used.","'cookies' is assigned a value but never used.","'setCookies' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Pagination' is defined but never used.","'dispatch' is defined but never used.","'range' is defined but never used.","'formatter' is defined but never used.","'useHistory' is defined but never used.","'INITAL_CART' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["334"],"'currentCustomer' is assigned a value but never used.","'setCurrentCustomer' is assigned a value but never used.","'mark' is assigned a value but never used.",["335"],"React Hook useEffect has missing dependencies: 'currentPage', 'pageSize', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["336"],"'total' is assigned a value but never used.","'total_price' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Button' is defined but never used.","'Empty' is defined but never used.","'List' is defined but never used.","'data' is assigned a value but never used.","'staff' is defined but never used.","'map' is defined but never used.","'switchMap' is defined but never used.","'login' is defined but never used.","'ajax' is defined but never used.","'fetchProduct' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'fetchOrder' is defined but never used.",["331"],["332"],"'fetchCustomer' is defined but never used.","'act' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'fetchCustomerFulfiled' is defined but never used.","'INITIAL_CHIDREN_PRODUCT' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","React Hook useEffect has a missing dependency: 'sortOrderByDate'. Either include it or remove the dependency array.",["337"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'isEmpty' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},"Update the dependencies array to be: [props.isLogin, props.staff, setCookies]",{"range":"348","text":"349"},"Update the dependencies array to be: [props, props.chosenCustomer]",{"range":"350","text":"351"},"Update the dependencies array to be: [props]",{"range":"352","text":"353"},"Update the dependencies array to be: [currentPage, keySearch, pageSize, props]",{"range":"354","text":"355"},"Update the dependencies array to be: [props.orders, sortOrderByDate]",{"range":"356","text":"357"},[851,879],"[props.isLogin, props.staff, setCookies]",[1613,1635],"[props, props.chosenCustomer]",[2359,2361],"[props]",[2991,3002],"[currentPage, keySearch, pageSize, props]",[674,688],"[props.orders, sortOrderByDate]"]